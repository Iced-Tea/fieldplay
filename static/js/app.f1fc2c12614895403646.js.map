{"version":3,"sources":["webpack:///static/js/app.f1fc2c12614895403646.js","webpack:///./src/lib/programs/updatePositionProgram.js","webpack:///./src/lib/shaderGraph/BaseShaderNode.js","webpack:///./src/lib/programs/colorModes.js","webpack:///./src/lib/programs/audioProgram.js","webpack:///./src/lib/gl-utils.js","webpack:///./src/lib/shaderGraph/UserDefinedVelocityFunction.js","webpack:///./src/lib/utils/floatPacking.js","webpack:///./src/lib/scene.js","webpack:///./src/lib/shaderGraph/parts/simplex-noise.js","webpack:///./src/lib/utils/getParsedVectorFieldFunction.js","webpack:///./src/lib/appState.js","webpack:///./src/lib/shaderGraph/updatePositionGraph.js","webpack:///./src/lib/shaderGraph/renderNodes.js","webpack:///./src/lib/utils/makeStatCounter.js","webpack:///./src/lib/shaderGraph/parts/decodeFloatRGBA.js","webpack:///./src/lib/shaderGraph/TexturePositionNode.js","webpack:///./src/lib/nativeMain.js","webpack:///./src/lib/shaderGraph/parts/encodeFloatRGBA.js","webpack:///./src/lib/shaderGraph/DrawParticleGraph.js","webpack:///./src/lib/bus.js","webpack:///./src/lib/programs/colorProgram.js","webpack:///./src/lib/programs/screenProgram.js","webpack:///./src/lib/shaderGraph/RungeKuttaIntegrator.js","webpack:///./src/lib/wglPanZoom.js","webpack:///./src/lib/programs/drawParticlesProgram.js","webpack:///./src/lib/utils/textureCollection.js","webpack:///./src/lib/config.js","webpack:///./src/lib/shaderGraph/PanzoomTransform.js"],"names":["webpackJsonp","3xg8","module","__webpack_exports__","__webpack_require__","updatePositionProgram","ctx","updateCode","vectorField","particlePositionShaderCodeBuilder","setCustomVectorField","fragment","getFragmentShader","vertex","getVertexShader","newProgram","__WEBPACK_IMPORTED_MODULE_0__gl_utils__","createProgram","gl","updateProgram","unload","colorMode","__WEBPACK_IMPORTED_MODULE_2__colorModes__","VELOCITY","readVelocity","requestSpeedUpdate","onParticleInit","x","y","particleStateResolution","dimensions","name","particleState","readTextures","dispose","i","__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__","writeTextures","prepareToDraw","program","UNIFORM","uniform4f","u_particle_color","uniformParticleColor","r","g","b","a","setColorMinMax","bindTextures","updateParticlesPositions","useProgram","bindAttribute","quadBuffer","a_pos","audioTexture","bindTexture","uniform1i","uniform1f","u_rand_seed","frameSeed","u_h","integrationTimeStep","frame","bbox","uniform2f","u_min","minX","minY","u_max","maxX","maxY","u_drop_rate","dropProbability","length","writeInfo","get","u_out_coordinate","bindFramebuffer","framebuffer","texture","viewport","drawArrays","TRIANGLES","pendingVectorLines","processVectorLinesRequest","temp","putVectorLinesRequestIntoQueue","request","resolutionOfParticlesInRequest","resolution","numParticles","texturesForRead","texturesForWrite","velocity_x","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","velocity_y","xStats","__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__","yStats","decoded_velocity_x","Float32Array","decoded_velocity_y","idx","vx","readFloat","vy","add","vectorLineInfo","__WEBPACK_IMPORTED_MODULE_7__bus___default","fire","__WEBPACK_IMPORTED_MODULE_3__colorProgram__","on","buffer","offset","__WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__","__WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__","__WEBPACK_IMPORTED_MODULE_7__bus__","n","4KA4","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default","BaseShaderNode","this","key","value","6c6E","ANGLE","94y8","audioProgram","__WEBPACK_IMPORTED_MODULE_0__bus___default","off","updateAudioBuffer","deleteTexture","updateTextures","audioDirty","TEXTURE_2D","texImage2D","audioBuffer","newBuffer","audioWidth","__WEBPACK_IMPORTED_MODULE_1__gl_utils__","createTexture","NEAREST","__WEBPACK_IMPORTED_MODULE_0__bus__","Ddjs","unit","activeTexture","TEXTURE0","createBuffer","data","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","filter","width","height","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attribute","numComponents","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexSource","fragmentSource","deleteProgram","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","Error","getProgramInfoLog","wrapper","numAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","numUniforms","ACTIVE_UNIFORMS","uniform","getActiveUniform","getUniformLocation","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","DuZ1","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__","__WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__","UserDefinedVelocityFunction","_BaseShaderNode","_this","__proto__","call","newUpdateCode","FaU1","encodeFloatRGBA","val","out","writeOffset","mag","Math","abs","exponent","floor","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default","exp2","mantissa","c","d","decodeFloatRGBA","A","B","C","D","exp","LN2","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__","JHsM","initScene","getLastParserResult","parserResult","error","moveBoundingBox","changes","parsedBoundingBox","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default","assignIfPossible","undefined","heightChange","cx","prevWidth","applyBoundingBox","change","newBoundingBox","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default","startRecord","capturer","currentCapturer","stopRecord","setColorMode","mode","parseInt","__WEBPACK_IMPORTED_MODULE_6__appState__","getColorMode","drawProgram","updateColorMode","getIntegrationTimeStep","setIntegrationTimeStep","f","parseFloat","__WEBPACK_IMPORTED_MODULE_5__bus___default","setPaused","shouldPause","isPaused","nextFrame","setFadeOutSpeed","fadeOpacity","setFadeout","getFadeOutSpeed","getFadeout","getParticlesCount","getParticleCount","setParticlesCount","newParticleCount","particleCount","initParticles","setParticleCount","setDropProbability","getDropProbability","getCurrentCode","getCode","updateVectorField","vectorFieldCode","currentVectorFieldCode","result","trySetNewCode","saveCode","validateCode","__WEBPACK_IMPORTED_MODULE_8__utils_getParsedVectorFieldFunction__","code","e","message","onResize","setWidthHeight","window","innerWidth","innerHeight","screenProgram","updateScreenTextures","updateBoundingBox","currentPanZoomTransform","w","h","dx","max","dy","canvasRect","top","left","canvas","style","stop","panzoom","removeEventListener","lastAnimationFrame","requestAnimationFrame","draw","cancelAnimationFrame","drawScreen","capture","fadeOutLastFrame","drawParticles","renderCurrentScreen","ceil","sqrt","restoreBBox","savedBBox","getBBox","sX","PI","E","sY","tX","tY","w2","h2","showRectangle","right","bottom","transform","clientX","scale","clientY","boundingBoxUpdated","p","round","saveBBox","resetBoundingBox","boundingBox","moveBy","addEventListener","disable","DEPTH_TEST","STENCIL_TEST","createFramebuffer","__WEBPACK_IMPORTED_MODULE_3__gl_utils__","screenTextureUnit","colorTextureUnit","__WEBPACK_IMPORTED_MODULE_9__programs_screenProgram__","__WEBPACK_IMPORTED_MODULE_10__programs_drawParticlesProgram__","persistedCode","console","getDefaultCode","api","start","getCanvasRect","getBoundingBox","__WEBPACK_IMPORTED_MODULE_4_panzoom___default","zoomSpeed","controller","__WEBPACK_IMPORTED_MODULE_7__wglPanZoom__","setTimeout","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_4_panzoom__","__WEBPACK_IMPORTED_MODULE_5__bus__","JjDM","MzG0","getParsedVectorFieldFunction","vectorFieldParsedCode","glslParser","check","globals","vectorFieldGlobals","log","errorCount","parserError","diag","diagnostics","firstError","range","lineColumn","_lineOffsets","line","contents","substr","column","substring","end","prefix","diagText","text","whitespace","errorDetail","isFloatError","indexOf","Array","join","then","bind","catch","oe","NEgR","qs","defined","defaults","set","cm","currentState","fadeout","fo","pc","timeStep","dt","clamp","dp","cy","immediate","arguments","pendingSave","clearTimeout","saveReally","defaultVectorField","number","min","__WEBPACK_IMPORTED_MODULE_1_query_state__","__WEBPACK_IMPORTED_MODULE_1_query_state___default","__WEBPACK_IMPORTED_MODULE_2__bus__","__WEBPACK_IMPORTED_MODULE_2__bus___default","__WEBPACK_IMPORTED_MODULE_3__programs_colorModes__","settingsPanel","collapsed","onChange","appState","scene","Qv35","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__","__WEBPACK_IMPORTED_MODULE_7__renderNodes__","__WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__","__WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__","__WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__","UpdatePositionGraph","options","readStoredPosition","udfVelocity","integratePositions","dropParticles","RandomParticleDropper","writeComputedPosition","panZoomDecode","decode","panZoomEncode","velocityCode","setNewUpdateCode","nodes","getMainBody","apply","S+/9","renderNodes","addToCode","push","forEach","node","getDefines","getFunctions","V39N","makeStatCounter","reset","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","getMin","getMax","XFig","XMEc","__WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__","__WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__","TexturePosition","isDecode","YJWA","url","CCapture","ffmpegScriptLoaded","ffmpegServer","document","createElement","setAttribute","onload","head","appendChild","format","framerate","verbose","extension","codec","ffmpegArguments","isRecording","__WEBPACK_IMPORTED_MODULE_1__bus___default","FFMpegServer","save","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__scene__","__WEBPACK_IMPORTED_MODULE_1__bus__","getElementById","ctxOptions","antialiasing","getContext","webgGLEnabled","a8s+","aZPT","addMethods","producer","array","getMethods","addMain","getMain","textureBasedColor","vfCode","getVariables","udf","integrate","__WEBPACK_IMPORTED_MODULE_4__UserDefinedVelocityFunction__","__WEBPACK_IMPORTED_MODULE_5__RungeKuttaIntegrator__","uniformColor","textureBasedPosition","__WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__","DrawParticleGraph","isUniformColor","variables","mainBody","decodePositions","colorParts","methods","main","eBcr","exports","eventify","gIFv","colorProgram","disposeTextures","velocity_x_texture","velocity_y_texture","pendingSpeedUpdate","speedNeedsUpdate","u_velocity_range","velocityCounter","OUT_V_X","OUT_V_Y","updateMinMax","v","__WEBPACK_IMPORTED_MODULE_4__utils_makeStatCounter__","__WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__","h62Y","makeScreenProgram","screenTexture","lastRenderedBoundingBox","boundBoxTextureTransform","drawTexture","backgroundTexture","NO_TRANSFORM","saveLastBbox","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","backgroundColor","clear","COLOR_BUFFER_BIT","emptyPixels","opacity","textureTransform","u_screen","u_opacity_border","u_opacity","uniform3f","u_transform","i69e","RungeKuttaIntegrator","p0IO","wglPanZoom","updateBoundingBoxCallback","lastDx","lastDy","lastScale","applyTransform","newTransform","getOwner","pKWO","drawParticlesProgram","initDrawProgram","drawGraph","__WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__","currentVectorField","random","particleIndices","particleStateX","particleStateY","__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__","particleIndexBuffer","deleteBuffer","a_index","u_particles_res","POINTS","__WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__","__WEBPACK_IMPORTED_MODULE_4__config__","isAudioEnabled","__WEBPACK_IMPORTED_MODULE_5__audioProgram__","pXNl","textureCollection","assignProgramUniforms","textures","tInfo","index","map","rvz5","vectorLinesEnabled","vhRe","PanzoomTransform","config","srcPosName","posName"],"mappings":"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","file":"static/js/app.f1fc2c12614895403646.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ \"3xg8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = updatePositionProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__ = __webpack_require__(\"Qv35\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__colorModes__ = __webpack_require__(\"6c6E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__colorProgram__ = __webpack_require__(\"gIFv\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__ = __webpack_require__(\"pXNl\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__ = __webpack_require__(\"V39N\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__bus__);\n\n\n\n\n\n\n\n\n\nvar particlePositionShaderCodeBuilder = new __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__[\"a\" /* default */]();\n\nfunction updatePositionProgram(ctx) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  var particleStateResolution;\n  var updateProgram;\n  var uniformParticleColor = { r: 77 / 255, g: 188 / 255, b: 201 / 255, a: 1 };\n  var readVelocity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__colorProgram__[\"a\" /* default */])(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  var pendingVectorLines;\n\n  // TODO: need to make sure we are not leaking.\n  __WEBPACK_IMPORTED_MODULE_7__bus___default.a.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode: updateCode,\n    updateParticlesPositions: updateParticlesPositions,\n    onParticleInit: onParticleInit,\n    prepareToDraw: prepareToDraw\n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    var fragment = particlePositionShaderCodeBuilder.getFragmentShader();\n    var vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    var newProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n\n  function onParticleInit(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    readVelocity.onParticleInit();\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].UNIFORM) gl.uniform4f(program.u_particle_color, uniformParticleColor.r, uniformParticleColor.g, uniformParticleColor.b, uniformParticleColor.a);else if (colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions() {\n    var program = updateProgram;\n    gl.useProgram(program.program);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    if (ctx.audioTexture) {\n      // TODO: I need to manage inputs better. E.g. color program might also need it.\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n\n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n\n    // Draw each coordinate individually\n    for (var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    if (pendingVectorLines) {\n      processVectorLinesRequest(program);\n      pendingVectorLines = null;\n    }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  function putVectorLinesRequestIntoQueue(request) {\n    pendingVectorLines = request;\n  }\n\n  function processVectorLinesRequest(program) {\n    var dimensions = [{\n      name: 'x',\n      particleState: pendingVectorLines.x\n    }, {\n      name: 'y',\n      particleState: pendingVectorLines.y\n    }];\n\n    // We create temporary textures and load requested positions in there\n    var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n    var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n    var texturesForRead = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, resolutionOfParticlesInRequest);\n    var texturesForWrite = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, resolutionOfParticlesInRequest);\n\n    texturesForRead.bindTextures(gl, program);\n\n    // Then we request coordinates out from GPU for each dimension\n    var writeInfo = texturesForWrite.get(0);\n    gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_x = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    gl.uniform1i(program.u_out_coordinate, 7); // v_y\n    writeInfo = texturesForWrite.get(1);\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_y = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    texturesForWrite.dispose();\n    texturesForRead.dispose();\n\n    var xStats = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__[\"a\" /* default */])();\n    var yStats = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__[\"a\" /* default */])();\n\n    var decoded_velocity_x = new Float32Array(numParticles);\n    var decoded_velocity_y = new Float32Array(numParticles);\n    for (var i = 0; i < velocity_y.length; i += 4) {\n      var idx = i / 4;\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      decoded_velocity_x[idx] = vx;\n      decoded_velocity_y[idx] = vy;\n      xStats.add(vx);\n      yStats.add(vy);\n    }\n\n    var vectorLineInfo = {\n      xStats: xStats,\n      yStats: yStats,\n      decoded_velocity_x: decoded_velocity_x,\n      decoded_velocity_y: decoded_velocity_y,\n      resolution: resolutionOfParticlesInRequest\n    };\n\n    __WEBPACK_IMPORTED_MODULE_7__bus___default.a.fire('vector-line-ready', vectorLineInfo);\n  }\n}\n\nfunction readFloat(buffer, offset) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__[\"b\" /* decodeFloatRGBA */])(buffer[offset + 0], buffer[offset + 1], buffer[offset + 2], buffer[offset + 3]);\n}\n\n/***/ }),\n\n/***/ \"4KA4\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n\n\n\nvar BaseShaderNode = function () {\n  function BaseShaderNode() {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, BaseShaderNode);\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(BaseShaderNode, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      return '';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '';\n    }\n  }]);\n\n  return BaseShaderNode;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BaseShaderNode);\n\n/***/ }),\n\n/***/ \"6c6E\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  UNIFORM: 1,\n  VELOCITY: 2,\n  ANGLE: 3\n});\n\n/***/ }),\n\n/***/ \"94y8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (audioProgram);\n\nfunction audioProgram(ctx) {\n  var gl = ctx.gl;\n\n  var audioWidth = 8,\n      audioHeight = 8;\n  var audioBuffer = new Uint8Array(audioWidth * audioHeight * 4);\n  var audioTexture = __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, audioBuffer, audioWidth, audioHeight);\n  var audioDirty = false;\n  ctx.audioTexture = audioTexture;\n\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.on('audio', updateAudioBuffer);\n\n  return {\n    updateTextures: updateTextures,\n    dispose: dispose\n  };\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_0__bus___default.a.off('audio', updateAudioBuffer);\n    gl.deleteTexture(audioTexture);\n  }\n\n  function updateTextures() {\n    if (!audioDirty) return;\n    audioDirty = false;\n\n    // TODO: This should come from fftSize?\n    var width = 5,\n        height = 5;\n    gl.bindTexture(gl.TEXTURE_2D, audioTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, audioBuffer);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  function updateAudioBuffer(newBuffer) {\n    audioBuffer = newBuffer;\n    audioDirty = true;\n  }\n}\n\n/***/ }),\n\n/***/ \"Ddjs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  createTexture: createTexture,\n  bindFramebuffer: bindFramebuffer,\n  createProgram: createProgram,\n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  bindTexture: bindTexture\n});\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nfunction bindFramebuffer(gl, framebuffer, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload: unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n    var attribute = gl.getActiveAttrib(program, i);\n    wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n    var uniform = gl.getActiveUniform(program, i);\n    wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper;\n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n/***/ }),\n\n/***/ \"DuZ1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__ = __webpack_require__(\"JjDM\");\n\n\n\n\n\n\n\n\nvar UserDefinedVelocityFunction = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(UserDefinedVelocityFunction, _BaseShaderNode);\n\n  function UserDefinedVelocityFunction(updateCode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, UserDefinedVelocityFunction);\n\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (UserDefinedVelocityFunction.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(UserDefinedVelocityFunction)).call(this));\n\n    _this.updateCode = updateCode || '';\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(UserDefinedVelocityFunction, [{\n    key: 'setNewUpdateCode',\n    value: function setNewUpdateCode(newUpdateCode) {\n      this.updateCode = newUpdateCode;\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float frame;\\nuniform sampler2D u_audio;\\n\\n#define PI 3.1415926535897932384626433832795\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n      // TODO: Do I need to inject snoise only when it's used?\n      return '\\n' + __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__[\"a\" /* default */] + '\\n\\nvec2 rotate(vec2 p,float a) {\\n\\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\\n}\\n\\n// TODO: This will change. Don\\'t use it.\\nfloat audio(float index) {\\n  float rgbI = floor(index/4.);\\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\\n  vec4 rgba = texture2D(u_audio, txPos);\\n  \\n  float offset = mod(index, 4.);\\n  if (offset == 0.) return rgba[0];\\n  if (offset == 1.) return rgba[1];\\n  if (offset == 2.) return rgba[2];\\n  return rgba[3];\\n}\\n\\nvec2 get_velocity(const vec2 p) {\\n  vec2 v = vec2(0.);\\n  ' + (this.updateCode ? this.updateCode : '') + '\\n  return v;\\n}\\n  ';\n    }\n  }]);\n\n  return UserDefinedVelocityFunction;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UserDefinedVelocityFunction);\n\n/***/ }),\n\n/***/ \"FaU1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = encodeFloatRGBA;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = decodeFloatRGBA;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__ = __webpack_require__(\"yI0F\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__);\n\n/**\n * This file encodes/decodes float values into 32bit rgba array\n * \n * It is based on https://computergraphics.stackexchange.com/questions/4151/webgl-packing-unpacking-functions-that-can-roundtrip-all-typical-32-bit-floats\n * and it is not perfect. If you know how to improve it - please let me know.\n */\n\n/**\n * Encodes float value into output array\n * @param {float} val - value to be encode\n * @param {Uint8Array} out  - array where encoded value needs to be written.\n * @param {Number} writeOffset - offset in the original array where values should be written.\n */\nfunction encodeFloatRGBA(val, out, writeOffset) {\n  if (val == 0.0) {\n    out[writeOffset + 0] = 0;out[writeOffset + 1] = 0;out[writeOffset + 2] = 0;out[writeOffset + 3] = 0;\n    return;\n  }\n\n  var mag = Math.abs(val);\n  var exponent = Math.floor(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default()(mag));\n  // Correct log2 approximation errors.\n  exponent += exp2(exponent) <= mag / 2.0 ? 1 : 0;\n  exponent -= exp2(exponent) > mag ? 1 : 0;\n\n  var mantissa;\n  if (exponent > 100.0) {\n    mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n  } else {\n    mantissa = mag / exp2(exponent) - 1.0;\n  }\n\n  var a = exponent + 127.0;\n  mantissa *= 256.0;\n  var b = Math.floor(mantissa);\n  mantissa -= b;\n  mantissa *= 256.0;\n  var c = Math.floor(mantissa);\n  mantissa -= c;\n  mantissa *= 128.0;\n  var d = Math.floor(mantissa) * 2.0 + (val < 0.0 ? 1 : 0);\n\n  out[writeOffset + 0] = a;out[writeOffset + 1] = b;out[writeOffset + 2] = c;out[writeOffset + 3] = d;\n}\n\n/**\n * Given byte values in range [0..255] returns decoded float value.\n * \n * @param {Byte} r \n * @param {Byte} g \n * @param {Byte} b \n * @param {Byte} a \n */\nfunction decodeFloatRGBA(r, g, b, a) {\n  var A = Math.floor(r + 0.5);\n  var B = Math.floor(g + 0.5);\n  var C = Math.floor(b + 0.5);\n  var D = Math.floor(a + 0.5);\n\n  var exponent = A - 127.0;\n  var sign = 1.0 - D % 2.0 * 2.0;\n  var mantissa = (A > 0.0 ? 1 : 0) + B / 256.0 + C / 65536.0 + Math.floor(D / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n\nfunction exp2(exponent) {\n  return Math.exp(exponent * Math.LN2);\n}\n\n/***/ }),\n\n/***/ \"JHsM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = initScene;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__ = __webpack_require__(\"AMV0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__ = __webpack_require__(\"5dBV\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_panzoom__ = __webpack_require__(\"yBIK\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_panzoom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_panzoom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__appState__ = __webpack_require__(\"NEgR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__wglPanZoom__ = __webpack_require__(\"p0IO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_getParsedVectorFieldFunction__ = __webpack_require__(\"MzG0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__programs_screenProgram__ = __webpack_require__(\"h62Y\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__programs_drawParticlesProgram__ = __webpack_require__(\"pKWO\");\n\n\n\n/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Kicks offs the app rendering. Initialized before even vue is loaded.\n * \n * @param {WebGLRenderingContext} gl \n */\nfunction initScene(gl) {\n  // Canvas size management\n  var canvasRect = { width: 0, height: 0, top: 0, left: 0 };\n  setWidthHeight(gl.canvas.width, gl.canvas.height);\n  window.addEventListener('resize', onResize, true);\n\n  // Video capturing is available in super advanced mode. You'll need to install\n  // and start https://github.com/greggman/ffmpegserver.js \n  // Then type in the console: window.startRecord();\n  // This will trigger frame-by-frame recording (it is slow). To stop it, call window.stopRecord();\n  __WEBPACK_IMPORTED_MODULE_5__bus___default.a.on('start-record', startRecord);\n  __WEBPACK_IMPORTED_MODULE_5__bus___default.a.on('stop-record', stopRecord);\n  __WEBPACK_IMPORTED_MODULE_5__bus___default.a.on('glsl-parser-ready', validateCode);\n  var currentCapturer = null;\n\n  // TODO: It feels like bounding box management needs to be moved out from here.\n  // TODO: bbox needs to be a class with width/height properties.\n  var bbox = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getBBox() || {};\n  var currentPanZoomTransform = {\n    scale: 1,\n    x: 0,\n    y: 0\n  };\n\n  // How many particles do we want?\n  var particleCount = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getParticleCount();\n  // What is the current code?\n  var currentVectorFieldCode = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getCode();\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n\n  // TODO: Remove local variables in favour of context.\n\n  // Context variable is a way to share rendering state between multiple programs. It has a lot of stuff on it.\n  // I found that it's the easiest way to work in state-full world of WebGL.\n  // Until I discover a better way to write WebGL code.\n  var ctx = {\n    gl: gl,\n    bbox: bbox,\n    canvasRect: canvasRect,\n\n    framebuffer: gl.createFramebuffer(),\n\n    // This is used only to render full-screen rectangle. Main magic happens inside textures.\n    quadBuffer: __WEBPACK_IMPORTED_MODULE_3__gl_utils__[\"a\" /* default */].createBuffer(gl, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1])),\n\n    colorMode: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getColorMode(),\n\n    // This defines texture unit for screen rendering. First few indices are taken by textures\n    // that compute particles position/color\n    // TODO: I need to find a better way to manage this.\n    screenTextureUnit: 3,\n\n    // This is where color texture needs to be bound.\n    colorTextureUnit: 2,\n\n    integrationTimeStep: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getIntegrationTimeStep(),\n\n    // On each frame the likelihood for a particle to reset its position is this:\n    dropProbability: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getDropProbability(),\n\n    // current frame number. Reset every time when new shader is compiled\n    frame: 0,\n\n    // Texture size to store particles' positions\n    particleStateResolution: 0,\n\n    // How quickly we should fade previous frame (from 0..1)\n    fadeOpacity: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getFadeout(),\n\n    // Ignore this one for a moment. Yes, the app support web audio API,\n    // but it's rudimentary, so... shhh! it's a secret.\n    // Don't shhh on me!\n    audioTexture: null\n  };\n\n  // Frame management\n  var lastAnimationFrame;\n  var isPaused = false;\n\n  // screen rendering;\n  var screenProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__programs_screenProgram__[\"a\" /* default */])(ctx);\n  var drawProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__programs_drawParticlesProgram__[\"a\" /* default */])(ctx);\n\n  // For delayed parsing result verification (e.g. when vue is loaded it\n  // can request us to see if there were any errors)\n  var parserResult;\n\n  loadCodeFromAppState();\n\n  // particles\n  initParticles(particleCount);\n\n  var api = {\n    start: nextFrame,\n    stop: stop,\n    dispose: dispose,\n    resetBoundingBox: resetBoundingBox,\n    moveBoundingBox: moveBoundingBox,\n\n    setPaused: setPaused,\n\n    updateVectorField: updateVectorField,\n    getCurrentCode: getCurrentCode,\n\n    getParticlesCount: getParticlesCount,\n    setParticlesCount: setParticlesCount,\n\n    setFadeOutSpeed: setFadeOutSpeed,\n    getFadeOutSpeed: getFadeOutSpeed,\n\n    setDropProbability: setDropProbability,\n    getDropProbability: getDropProbability,\n\n    getIntegrationTimeStep: getIntegrationTimeStep,\n    setIntegrationTimeStep: setIntegrationTimeStep,\n\n    setColorMode: setColorMode,\n    getColorMode: getColorMode,\n\n    getLastParserResult: getLastParserResult,\n\n    getCanvasRect: function getCanvasRect() {\n      // We trust they don't do anything bad with this ...\n      return canvasRect;\n    },\n    getBoundingBox: function getBoundingBox() {\n      // again, we trust. Maybe to much?\n      return ctx.bbox;\n    }\n  };\n\n  var panzoom = initPanzoom();\n  restoreBBox();\n\n  setTimeout(function () {\n    __WEBPACK_IMPORTED_MODULE_5__bus___default.a.fire('scene-ready', api);\n  });\n\n  return api;\n\n  function getLastParserResult() {\n    return parserResult && parserResult.error;\n  }\n\n  function moveBoundingBox(changes) {\n    if (!changes) return;\n    var parsedBoundingBox = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default()({}, ctx.bbox);\n\n    assignIfPossible(changes, 'minX', parsedBoundingBox);\n    assignIfPossible(changes, 'minY', parsedBoundingBox);\n    assignIfPossible(changes, 'maxX', parsedBoundingBox);\n    assignIfPossible(changes, 'maxY', parsedBoundingBox);\n\n    // for Y axis changes we need to preserve aspect ration, which means\n    // we also need to change X...\n    if (changes.minY !== undefined || changes.maxY !== undefined) {\n      // adjust values for X\n      var heightChange = Math.abs(parsedBoundingBox.minY - parsedBoundingBox.maxY) / Math.abs(ctx.bbox.minY - ctx.bbox.maxY);\n      var cx = (ctx.bbox.maxX + ctx.bbox.minX) / 2;\n      var prevWidth = (ctx.bbox.maxX - ctx.bbox.minX) / 2;\n      parsedBoundingBox.minX = cx - prevWidth * heightChange;\n      parsedBoundingBox.maxX = cx + prevWidth * heightChange;\n    }\n\n    applyBoundingBox(parsedBoundingBox);\n  }\n\n  function assignIfPossible(change, key, newBoundingBox) {\n    var value = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default()(change[key]);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(value)) {\n      newBoundingBox[key] = value;\n    }\n  }\n\n  function startRecord(capturer) {\n    currentCapturer = capturer;\n  }\n\n  function stopRecord() {\n    currentCapturer = null;\n  }\n\n  function setColorMode(x) {\n    var mode = parseInt(x, 10);\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setColorMode(mode);\n    ctx.colorMode = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getColorMode();\n    drawProgram.updateColorMode(mode);\n  }\n\n  function getColorMode() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getColorMode();\n  }\n\n  function getIntegrationTimeStep() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getIntegrationTimeStep();\n  }\n\n  function setIntegrationTimeStep(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      ctx.integrationTimeStep = f;\n      __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setIntegrationTimeStep(f);\n      __WEBPACK_IMPORTED_MODULE_5__bus___default.a.fire('integration-timestep-changed', f);\n    }\n  }\n\n  function setPaused(shouldPause) {\n    isPaused = shouldPause;\n    nextFrame();\n  }\n\n  // Main screen fade out configuration\n  function setFadeOutSpeed(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      ctx.fadeOpacity = f;\n      __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setFadeout(f);\n    }\n  }\n\n  function getFadeOutSpeed() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getFadeout();\n  }\n\n  // Number of particles configuration\n  function getParticlesCount() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getParticleCount();\n  }\n\n  function setParticlesCount(newParticleCount) {\n    if (!__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(newParticleCount)) return;\n    if (newParticleCount === particleCount) return;\n    if (newParticleCount < 1) return;\n\n    initParticles(newParticleCount);\n\n    particleCount = newParticleCount;\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setParticleCount(newParticleCount);\n  }\n\n  // drop probability\n  function setDropProbability(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      // TODO: Do I need to worry about duplication/clamping?\n      __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setDropProbability(f);\n      ctx.dropProbability = f;\n    }\n  }\n\n  function getDropProbability() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getDropProbability();\n  }\n\n  // current code;\n  function getCurrentCode() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getCode();\n  }\n\n  function loadCodeFromAppState() {\n    var persistedCode = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getCode();\n    if (persistedCode) {\n      var result = trySetNewCode(persistedCode);\n      if (!result) return; // This means we set correctly;\n      // If we get here - something went wrong. see the console\n      console.error('Failed to restore previous vector field: ', result.error);\n    }\n    // we either failed or we want a default vector field\n    trySetNewCode(__WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getDefaultCode());\n  }\n\n  function updateVectorField(vectorFieldCode) {\n    if (vectorFieldCode === currentVectorFieldCode) return getLastParserResult();\n\n    var result = trySetNewCode(vectorFieldCode);\n    if (result && result.error) return result;\n\n    currentVectorFieldCode = vectorFieldCode;\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].saveCode(vectorFieldCode);\n  }\n\n  function validateCode() {\n    parserResult = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__utils_getParsedVectorFieldFunction__[\"a\" /* default */])(currentVectorFieldCode);\n    __WEBPACK_IMPORTED_MODULE_5__bus___default.a.fire('glsl-parser-result-changed', parserResult.error);\n  }\n\n  function trySetNewCode(vectorFieldCode) {\n    // step 1 - run through parser\n    parserResult = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__utils_getParsedVectorFieldFunction__[\"a\" /* default */])(vectorFieldCode);\n\n    if (parserResult.error) {\n      return parserResult.error;\n    }\n\n    // step 2 - run through real webgl\n    try {\n      drawProgram.updateCode(parserResult.code);\n    } catch (e) {\n      return {\n        error: e.message\n      };\n    }\n  }\n\n  function onResize() {\n    setWidthHeight(window.innerWidth, window.innerHeight);\n\n    screenProgram.updateScreenTextures();\n\n    updateBoundingBox(currentPanZoomTransform);\n  }\n\n  function setWidthHeight(w, h) {\n    var dx = Math.max(w * 0.02, 30);\n    var dy = Math.max(h * 0.02, 30);\n    canvasRect.width = w + 2 * dx;\n    canvasRect.height = h + 2 * dy;\n    canvasRect.top = -dy;\n    canvasRect.left = -dx;\n\n    var canvas = gl.canvas;\n    canvas.width = canvasRect.width;\n    canvas.height = canvasRect.height;\n    canvas.style.left = -dx + 'px';\n    canvas.style.top = -dy + 'px';\n  }\n\n  function dispose() {\n    stop();\n    panzoom.dispose();\n    window.removeEventListener('resize', onResize, true);\n  }\n\n  function nextFrame() {\n    if (lastAnimationFrame) return;\n\n    if (isPaused) return;\n\n    lastAnimationFrame = requestAnimationFrame(draw);\n  }\n\n  function stop() {\n    cancelAnimationFrame(lastAnimationFrame);\n    lastAnimationFrame = 0;\n  }\n\n  function draw() {\n    lastAnimationFrame = 0;\n\n    drawScreen();\n\n    if (currentCapturer) currentCapturer.capture(gl.canvas);\n\n    nextFrame();\n  }\n\n  function drawScreen() {\n    screenProgram.fadeOutLastFrame();\n    drawProgram.drawParticles();\n    screenProgram.renderCurrentScreen();\n    drawProgram.updateParticlesPositions();\n  }\n\n  // TODO: Rename to updateParticlesCount()\n  function initParticles(numParticles) {\n    // we create a square texture where each pixel will hold a particle position encoded as RGBA\n    ctx.particleStateResolution = Math.ceil(Math.sqrt(numParticles));\n    drawProgram.onParticleInit();\n  }\n\n  function initPanzoom() {\n    var initializedPanzoom = __WEBPACK_IMPORTED_MODULE_4_panzoom___default()(gl.canvas, {\n      zoomSpeed: 0.025,\n      controller: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__wglPanZoom__[\"a\" /* default */])(gl.canvas, updateBoundingBox)\n    });\n\n    return initializedPanzoom;\n  }\n\n  function restoreBBox() {\n    var savedBBox = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getBBox();\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n\n    var sX = Math.PI * Math.E;\n    var sY = Math.PI * Math.E;\n    var tX = 0;\n    var tY = 0;\n    if (savedBBox) {\n      sX = savedBBox.maxX - savedBBox.minX;\n      sY = savedBBox.maxY - savedBBox.minY;\n      // TODO: Not sure if this is really the best way to do it.\n      // var ar = width/height;\n      tX = width * (savedBBox.minX + savedBBox.maxX) / 2;\n      tY = width * (savedBBox.minY + savedBBox.maxY) / 2;\n    }\n\n    var w2 = sX * width / 2;\n    var h2 = sY * height / 2;\n    panzoom.showRectangle({\n      left: -w2 + tX,\n      top: -h2 - tY,\n      right: w2 + tX,\n      bottom: h2 - tY\n    });\n  }\n\n  function updateBoundingBox(transform) {\n    screenProgram.boundingBoxUpdated = true;\n\n    currentPanZoomTransform.x = transform.x;\n    currentPanZoomTransform.y = transform.y;\n    currentPanZoomTransform.scale = transform.scale;\n\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n\n    var minX = clientX(0);\n    var minY = clientY(0);\n    var maxX = clientX(width);\n    var maxY = clientY(height);\n\n    // we divide by width to keep aspect ratio\n    // var ar = width/height;\n    var p = 10000;\n    bbox.minX = Math.round(p * minX / width) / p;\n    bbox.minY = Math.round(p * -minY / width) / p;\n    bbox.maxX = Math.round(p * maxX / width) / p;\n    bbox.maxY = Math.round(p * -maxY / width) / p;\n\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].saveBBox(bbox);\n\n    __WEBPACK_IMPORTED_MODULE_5__bus___default.a.fire('bbox-change', bbox);\n\n    function clientX(x) {\n      return (x - transform.x) / transform.scale;\n    }\n\n    function clientY(y) {\n      return (y - transform.y) / transform.scale;\n    }\n  }\n\n  function resetBoundingBox() {\n    var w = Math.PI * Math.E * 0.5;\n    var h = Math.PI * Math.E * 0.5;\n\n    applyBoundingBox({\n      minX: -w,\n      minY: -h,\n      maxX: w,\n      maxY: h\n    });\n  }\n\n  function applyBoundingBox(boundingBox) {\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].saveBBox(boundingBox, /* immediate = */true);\n    restoreBBox();\n    // a hack to trigger panzoom event\n    panzoom.moveBy(0, 0, false);\n  }\n}\n\n/***/ }),\n\n/***/ \"JjDM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvar code = \"\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute(vec3 x) {\\n  return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289(i); // Avoid truncation effects in permutation\\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\\n\\t\\t+ i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"MzG0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getParsedVectorFieldFunction;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/**\n * This module parses user defined vector field code.\n */\n\n\n\n// This is naive parser that is being used until the real `glsl-parser`\n// is loaded asynchronously. This parser assumes there are no errors\n// TODO: maybe I should be more careful here?\nvar glslParser = {\n  check: function check(code) {\n    return {\n      code: code,\n      log: {\n        errorCount: 0\n      }\n    };\n  }\n};\n\n// glsl-parser is ~179KB uncompressed, we don't want to wait until it is downloaded.\n// So we load it asynchronously...\n__webpack_require__.e/* require.ensure */(2).then((function () {\n  // ... and replace the naive parser with the real one, when ready.\n  glslParser = __webpack_require__(\"TFw8\");\n\n  // notify interested parties, so that they can recheck code if they wish.\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.fire('glsl-parser-ready');\n}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\nvar vectorFieldGlobals = '\\nimport {\\n\\n  float PI;\\n  float snoise(vec2 v);\\n  float frame;\\n  vec2 rotate(vec2 p,float a);\\n  float audio(float index);\\n}';\n\n/**\n * Given a string, verifies that it is a valid glsl code for a vector field,\n * and then returns code + log.\n * \n * @param {String} vectorFieldCode \n */\nfunction getParsedVectorFieldFunction(vectorFieldCode) {\n  // TODO: what if we want to support 3d?\n  var vectorFieldParsedCode = '\\nvec2 velocity(vec2 p) {\\nvec2 v = vec2(0., 0.);\\n' + vectorFieldCode + '\\nreturn v;\\n}';\n  var parserResult = glslParser.check(vectorFieldParsedCode, { globals: vectorFieldGlobals });\n  parserResult.code = vectorFieldCode;\n\n  if (parserResult.log.errorCount) parserResult.error = parserError(parserResult.log);\n\n  return parserResult;\n}\n\nfunction parserError(log) {\n  var diag = log.diagnostics[0];\n  // TODO probably need to check kind (errors ar 0, warnings are 1)\n  var firstError = diag.range;\n  var lineColumn = firstError.lineColumn();\n  var source = firstError.source;\n  var offset = source._lineOffsets[lineColumn.line];\n  var line = source.contents.substr(offset, lineColumn.column);\n  line += source.contents.substring(firstError.start, firstError.end);\n  var prefix = 'Line ' + lineColumn.line + ': ';\n  var diagText = diag.text;\n  return {\n    error: prefix + line + '\\n' + whitespace(prefix.length) + whitespace(lineColumn.column) + '^',\n    errorDetail: diagText,\n    isFloatError: isFloatError(diagText)\n  };\n}\n\nfunction isFloatError(diagText) {\n  return diagText.indexOf('\"int\"') > -1 && diagText.indexOf('\"float\"') > -1;\n}\n\nfunction whitespace(length) {\n  return new Array(length + 1).join(' ');\n}\n\n/***/ }),\n\n/***/ \"NEgR\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__ = __webpack_require__(\"AMV0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_query_state__ = __webpack_require__(\"3zJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_query_state___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_query_state__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__ = __webpack_require__(\"6c6E\");\n\n\n\n\n\nvar qs = __WEBPACK_IMPORTED_MODULE_1_query_state___default()();\nvar currentState = qs.get();\n\n// var defaultVectorField = `v.x = -p.y;\n// v.y = p.x;\n// `;\nvar defaultVectorField = 'v.x = 0.1 * p.y;\\nv.y = -0.2 * p.y;';\n\nvar pendingSave;\nvar defaults = {\n  timeStep: 0.01,\n  dropProbability: 0.009,\n  particleCount: 10000,\n  fadeout: .998,\n  colorMode: __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].UNIFORM\n};\n\nvar settingsPanel = {\n  collapsed: window.innerWidth < 600 ? true : false\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  settingsPanel: settingsPanel,\n  saveBBox: saveBBox,\n  getBBox: getBBox,\n  saveCode: saveCode,\n  getCode: getCode,\n  getDefaultCode: getDefaultCode,\n\n  getDropProbability: getDropProbability,\n  setDropProbability: setDropProbability,\n\n  getIntegrationTimeStep: getIntegrationTimeStep,\n  setIntegrationTimeStep: setIntegrationTimeStep,\n\n  getParticleCount: getParticleCount,\n  setParticleCount: setParticleCount,\n\n  getFadeout: getFadeout,\n  setFadeout: setFadeout,\n\n  getColorMode: getColorMode,\n  setColorMode: setColorMode\n});\n\nqs.onChange(function (appState) {\n  __WEBPACK_IMPORTED_MODULE_2__bus___default.a.fire('scene-ready', window.scene);\n});\n\nfunction getColorMode() {\n  var colorMode = qs.get('cm');\n  return defined(colorMode) ? colorMode : defaults.colorMode;\n}\n\nfunction setColorMode(colorMode) {\n  if (!defined(colorMode)) return;\n  qs.set({ cm: colorMode });\n  currentState.cm = colorMode;\n}\n\nfunction getFadeout() {\n  var fadeout = qs.get('fo');\n  return defined(fadeout) ? fadeout : defaults.fadeout;\n}\n\nfunction setFadeout(fadeout) {\n  if (!defined(fadeout)) return;\n  qs.set({ fo: fadeout });\n  currentState.fo = fadeout;\n}\n\nfunction getParticleCount() {\n  var particleCount = qs.get('pc');\n  return defined(particleCount) ? particleCount : defaults.particleCount;\n}\n\nfunction setParticleCount(particleCount) {\n  if (!defined(particleCount)) return;\n  qs.set({ pc: particleCount });\n  currentState.pc = particleCount;\n}\n\nfunction getIntegrationTimeStep() {\n  var timeStep = qs.get('dt');\n  return defined(timeStep) ? timeStep : defaults.timeStep;\n}\n\nfunction setIntegrationTimeStep(dt) {\n  if (!defined(dt)) return;\n  qs.set({ dt: dt });\n  currentState.dt = dt;\n}\n\nfunction getDropProbability() {\n  var dropProbability = qs.get('dp');\n  return defined(dropProbability) ? dropProbability : defaults.dropProbability;\n}\n\nfunction setDropProbability(dropProbability) {\n  if (!defined(dropProbability)) return;\n  clamp(dropProbability, 0, 1);\n  qs.set({ dp: dropProbability });\n}\n\nfunction getBBox() {\n  var cx = qs.get('cx');\n  var cy = qs.get('cy');\n  var w = qs.get('w');\n  var h = qs.get('h');\n\n  var bboxDefined = defined(cx) && defined(cy) && defined(w) && defined(h);\n  if (!bboxDefined) return;\n\n  var w2 = w / 2;\n  var h2 = h / 2;\n  var p = 10000;\n  return {\n    minX: Math.round(p * (cx - w2)) / p,\n    maxX: Math.round(p * (cx + w2)) / p,\n    minY: Math.round(p * (cy - h2)) / p,\n    maxY: Math.round(p * (cy + h2)) / p\n  };\n}\n\nfunction saveBBox(bbox) {\n  var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (pendingSave) {\n    clearTimeout(pendingSave);\n    pendingSave = 0;\n  }\n\n  if (immediate) saveReally(bbox);else {\n    pendingSave = setTimeout(function () {\n      return saveReally(bbox);\n    }, 300);\n  }\n}\n\nfunction saveReally(bbox) {\n  pendingSave = 0;\n  var bbox = {\n    cx: (bbox.minX + bbox.maxX) * 0.5,\n    cy: (bbox.minY + bbox.maxY) * 0.5,\n    w: bbox.maxX - bbox.minX,\n    h: bbox.maxX - bbox.minX\n  };\n\n  if (bbox.w <= 0 || bbox.h <= 0) return;\n\n  qs.set(bbox);\n\n  currentState.cx = bbox.cx;\n  currentState.cy = bbox.cy;\n  currentState.w = bbox.w;\n  currentState.h = bbox.h;\n}\n\nfunction getCode() {\n  return qs.get('code') || defaultVectorField;\n}\n\nfunction getDefaultCode() {\n  return defaultVectorField;\n}\n\nfunction saveCode(code) {\n  qs.set({\n    code: code\n  });\n  currentState.code = code;\n}\n\nfunction defined(number) {\n  return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(number);\n}\n\nfunction clamp(x, min, max) {\n  return x < min ? min : x > max ? max : x;\n}\n\n/***/ }),\n\n/***/ \"Qv35\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__ = __webpack_require__(\"XMEc\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__renderNodes__ = __webpack_require__(\"S+/9\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__ = __webpack_require__(\"vhRe\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar UpdatePositionGraph = function () {\n  function UpdatePositionGraph(options) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, UpdatePositionGraph);\n\n    this.readStoredPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */true);\n    this.udfVelocity = new __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__[\"a\" /* default */]();\n    this.integratePositions = new __WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__[\"a\" /* default */]();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */false);\n    this.panZoomDecode = new __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__[\"a\" /* default */]({ decode: true });\n    this.panZoomEncode = new __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__[\"a\" /* default */]({ decode: false });\n\n    this.colorMode = options && options.colorMode;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(UpdatePositionGraph, [{\n    key: 'setCustomVectorField',\n    value: function setCustomVectorField(velocityCode) {\n      this.udfVelocity.setNewUpdateCode(velocityCode);\n    }\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader() {\n      return 'precision highp float;\\n\\nattribute vec2 a_pos;\\nvarying vec2 v_tex_pos;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n\\nvoid main() {\\n    v_tex_pos = a_pos;\\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\\n}';\n    }\n  }, {\n    key: 'getFragmentShader',\n    value: function getFragmentShader() {\n      var nodes = [this.readStoredPosition, this.dropParticles, this.udfVelocity, this.integratePositions, {\n        getMainBody: function getMainBody() {\n          return '\\n  vec2 newPos = pos + velocity;\\n  ';\n        }\n      }, this.writeComputedPosition];\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__renderNodes__[\"a\" /* default */])(nodes);\n    }\n  }]);\n\n  return UpdatePositionGraph;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UpdatePositionGraph);\n\nvar RandomParticleDropper = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(RandomParticleDropper, _BaseShaderNode);\n\n  function RandomParticleDropper() {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, RandomParticleDropper);\n\n    return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RandomParticleDropper.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RandomParticleDropper)).apply(this, arguments));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(RandomParticleDropper, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_drop_rate;\\nuniform float u_rand_seed;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Ideally this node should probably depend on\n      // random number generator node, so that we don't duplicate code\n      return '\\n// pseudo-random generator\\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\\nfloat rand(const vec2 co) {\\n    float t = dot(rand_constants.xy, co);\\n    return fract(sin(t) * (rand_constants.z + t));\\n}\\n';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n  // a random seed to use for the particle drop\\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\\n  float drop = step(1.0 - u_drop_rate, rand(seed));\\n\\n  // TODO: This can be customized to produce various emitters\\n  // random_pos is in range from 0..1, we move it to the bounding box:\\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\\n  pos = mix(pos, random_pos, drop);\\n';\n    }\n  }]);\n\n  return RandomParticleDropper;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"S+/9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = renderNodes;\n\nfunction renderNodes(nodes) {\n  var code = [];\n\n  nodes.forEach(function (node) {\n    if (node.getDefines) addToCode(node.getDefines());\n  });\n  nodes.forEach(function (node) {\n    if (node.getFunctions) addToCode(node.getFunctions());\n  });\n\n  addToCode('void main() {');\n  nodes.forEach(function (node) {\n    if (node.getMainBody) addToCode(node.getMainBody());\n  });\n  addToCode('}');\n  return code.join('\\n');\n\n  function addToCode(line) {\n    if (line) code.push(line);\n  }\n}\n\n/***/ }),\n\n/***/ \"V39N\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makeStatCounter;\n/**\n * A simple interface to compute eventual min/max \n */\nfunction makeStatCounter() {\n  var min, max;\n\n  var api = {\n    getMin: function getMin() {\n      return min;\n    },\n    getMax: function getMax() {\n      return max;\n    },\n    add: function add(x) {\n      if (x < min) min = x;\n      if (x > max) max = x;\n    },\n\n    reset: reset\n  };\n\n  return api;\n\n  function reset() {\n    min = Number.POSITIVE_INFINITY;\n    max = Number.NEGATIVE_INFINITY;\n  }\n}\n\n/***/ }),\n\n/***/ \"XFig\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar code = \"\\nhighp float decodeFloatRGBA( vec4 v ) {\\n  float a = floor(v.r * 255.0 + 0.5);\\n  float b = floor(v.g * 255.0 + 0.5);\\n  float c = floor(v.b * 255.0 + 0.5);\\n  float d = floor(v.a * 255.0 + 0.5);\\n\\n  float exponent = a - 127.0;\\n  float sign = 1.0 - mod(d, 2.0)*2.0;\\n  float mantissa = float(a > 0.0)\\n                  + b / 256.0\\n                  + c / 65536.0\\n                  + floor(d / 2.0) / 8388608.0;\\n  return sign * mantissa * exp2(exponent);\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"XMEc\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__ = __webpack_require__(\"a8s+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n\n\n\n\n\n\n\n\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\n\nvar TexturePosition = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(TexturePosition, _BaseShaderNode);\n\n  function TexturePosition(isDecode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, TexturePosition);\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (TexturePosition.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(TexturePosition)).call(this));\n\n    _this.isDecode = isDecode;\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(TexturePosition, [{\n    key: 'getFunctions',\n    value: function getFunctions() {\n      if (this.isDecode) {\n        return '\\n    ' + __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__[\"a\" /* default */] + '\\n    ' + __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n';\n      }\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      if (this.isDecode) {\n        // TODO: How to avoid duplication and silly checks?\n        return '\\nprecision highp float;\\n\\nuniform sampler2D u_particles_x;\\nuniform sampler2D u_particles_y;\\n\\n// Which coordinate needs to be printed onto the texture\\nuniform int u_out_coordinate;\\n\\nvarying vec2 v_tex_pos;\\n';\n      }\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      if (this.isDecode) {\n        return '\\n   vec2 pos = vec2(\\n     decodeFloatRGBA(texture2D(u_particles_x, v_tex_pos)),\\n     decodeFloatRGBA(texture2D(u_particles_y, v_tex_pos))\\n   );\\n';\n      }\n      return '\\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newPos.x);\\n    else if (u_out_coordinate == 1) gl_FragColor = encodeFloatRGBA(newPos.y);\\n    else if (u_out_coordinate == 6) gl_FragColor = encodeFloatRGBA(get_velocity(pos).x);\\n    else if (u_out_coordinate == 7) gl_FragColor = encodeFloatRGBA(get_velocity(pos).y);\\n';\n    }\n  }]);\n\n  return TexturePosition;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TexturePosition);\n\n/***/ }),\n\n/***/ \"YJWA\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scene__ = __webpack_require__(\"JHsM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__bus__);\n\n\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initVectorFieldApp(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\n__webpack_require__.e/* require.ensure */(0).then((function () {\n  // Settings UI is ready, initialize vue.js application\n  __webpack_require__(\"WOBu\");\n}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\nfunction initVectorFieldApp(canvas) {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  var ctxOptions = { antialiasing: false };\n\n  var gl = canvas.getContext('webgl', ctxOptions) || canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webgGLEnabled = true;\n    var scene = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__scene__[\"a\" /* default */])(gl);\n    scene.start();\n    // TODO: too bad to plop stuff onto window?\n    window.scene = scene;\n  } else {\n    window.webgGLEnabled = false;\n  }\n}\n\nvar CCapture;\nvar currentCapturer;\n\nwindow.startRecord = startRecord;\nwindow.isRecording = false;\n\nfunction startRecord(url) {\n  if (!CCapture) {\n    __webpack_require__.e/* require.ensure */(1).then((function () {\n      CCapture = __webpack_require__(\"nI+d\");\n      window.stopRecord = stopRecord;\n      startRecord(url);\n    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\n    return;\n  }\n\n  if (currentCapturer) {\n    currentCapturer.stop();\n  }\n\n  if (!ffmpegScriptLoaded()) {\n    var ffmpegServer = document.createElement('script');\n    ffmpegServer.setAttribute('src', url || 'http://localhost:8080/ffmpegserver/ffmpegserver.js');\n    ffmpegServer.onload = function () {\n      return startRecord(url);\n    };\n    document.head.appendChild(ffmpegServer);\n    return;\n  }\n\n  currentCapturer = new CCapture({\n    format: 'ffmpegserver',\n    framerate: 60,\n    verbose: true,\n    name: \"fieldplay\",\n    extension: \".mp4\",\n    codec: \"mpeg4\",\n    ffmpegArguments: [\"-b:v\", \"12M\"]\n  });\n\n  window.isRecording = true;\n  currentCapturer.start();\n  __WEBPACK_IMPORTED_MODULE_1__bus___default.a.fire('start-record', currentCapturer);\n}\n\nfunction ffmpegScriptLoaded() {\n  return typeof FFMpegServer !== 'undefined';\n}\n\nfunction stopRecord() {\n  window.isRecording = false;\n  __WEBPACK_IMPORTED_MODULE_1__bus___default.a.fire('stop-record', currentCapturer);\n  currentCapturer.stop();\n  currentCapturer.save();\n}\n\n/***/ }),\n\n/***/ \"a8s+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar code = \"\\nvec4 encodeFloatRGBA(highp float val) {\\n    if (val == 0.0) {\\n        return vec4(0.0, 0.0, 0.0, 0.0);\\n    }\\n\\n    float mag = abs(val);\\n    float exponent = floor(log2(mag));\\n    // Correct log2 approximation errors.\\n    exponent += float(exp2(exponent) <= mag / 2.0);\\n    exponent -= float(exp2(exponent) > mag);\\n\\n    float mantissa;\\n    if (exponent > 100.0) {\\n        // Not sure why this needs to be done in two steps for the largest float to work.\\n        // Best guess is the optimizer rewriting '/ exp2(e)' into '* exp2(-e)',\\n        // but exp2(-128.0) is too small to represent.\\n        mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\\n    } else {\\n        mantissa = mag / float(exp2(exponent)) - 1.0;\\n    }\\n\\n    float a = exponent + 127.0;\\n    mantissa *= 256.0;\\n    float b = floor(mantissa);\\n    mantissa -= b;\\n    mantissa *= 256.0;\\n    float c = floor(mantissa);\\n    mantissa -= c;\\n    mantissa *= 128.0;\\n    float d = floor(mantissa) * 2.0 + float(val < 0.0);\\n    return vec4(a, b, c, d) / 255.0;\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"aZPT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__ = __webpack_require__(\"6c6E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n\n\n\n\n\n\n\n// TODO: this duplicates code from texture position.\n\nvar DrawParticleGraph = function () {\n  function DrawParticleGraph(colorMode) {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, DrawParticleGraph);\n\n    this.colorMode = colorMode;\n    this.isUniformColor = colorMode === __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].UNIFORM;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(DrawParticleGraph, [{\n    key: 'getFragmentShader',\n    value: function getFragmentShader() {\n      var variables = [];\n      var mainBody = [];\n\n      if (this.isUniformColor) {\n        // uniform color comes via uniform setting\n        variables.push('uniform vec4 u_particle_color;');\n        mainBody.push('gl_FragColor = u_particle_color;');\n      } else {\n        // Otherwise it comes from a vertex shader\n        variables.push('varying vec4 v_particle_color;');\n        mainBody.push('gl_FragColor = v_particle_color;');\n      }\n      return 'precision highp float;\\n' + variables.join('\\n') + '\\n\\nvoid main() {\\n' + mainBody.join('\\n') + '\\n}';\n    }\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader(vfCode) {\n      var decodePositions = textureBasedPosition();\n      var colorParts = this.isUniformColor ? uniformColor() : textureBasedColor(this.colorMode, vfCode);\n      var methods = [];\n      addMethods(decodePositions, methods);\n      addMethods(colorParts, methods);\n      var main = [];\n      addMain(decodePositions, main);\n      addMain(colorParts, main);\n\n      return 'precision highp float;\\nattribute float a_index;\\nuniform float u_particles_res;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n\\n' + (decodePositions.getVariables() || '') + '\\n' + (colorParts.getVariables() || '') + '\\n\\n' + __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n\\n' + methods.join('\\n') + '\\n\\nvoid main() {\\n  vec2 txPos = vec2(\\n        fract(a_index / u_particles_res),\\n        floor(a_index / u_particles_res) / u_particles_res);\\n  gl_PointSize = 1.0;\\n\\n' + main.join('\\n') + '\\n\\n  vec2 du = (u_max - u_min);\\n  v_particle_pos = (v_particle_pos - u_min)/du;\\n  gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\\n}';\n    }\n  }]);\n\n  return DrawParticleGraph;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DrawParticleGraph);\n\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction textureBasedColor(colorMode, vfCode) {\n  var udf = new __WEBPACK_IMPORTED_MODULE_4__UserDefinedVelocityFunction__[\"a\" /* default */](vfCode);\n  var integrate = new __WEBPACK_IMPORTED_MODULE_5__RungeKuttaIntegrator__[\"a\" /* default */]();\n\n  return {\n    getVariables: getVariables,\n    getMain: getMain,\n    getMethods: getMethods\n  };\n\n  function getVariables() {\n    var defines = '';\n\n    return '\\nuniform sampler2D u_colors;\\nuniform vec2 u_velocity_range;\\n' + defines + '\\nvarying vec4 v_particle_color;\\n' + udf.getDefines() + '\\n' + integrate.getDefines() + '\\n';\n  }\n\n  function getMethods() {\n    return '\\n// https://github.com/hughsk/glsl-hsv2rgb\\nvec3 hsv2rgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n' + udf.getFunctions() + '\\n' + integrate.getFunctions() + '\\n';\n  }\n\n  function getMain() {\n    // TODO: This needs to be refactored. I don't like code duplication.\n    var decode = colorMode === __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].VELOCITY ? '\\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\\n  v_particle_color = vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\\n' : '\\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\\n  v_particle_color = vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\\n';\n\n    return '\\nvec2 velocity = rk4(v_particle_pos);\\n' + decode + '\\n';\n  }\n}\n\nfunction uniformColor() {\n  return {\n    getVariables: function getVariables() {},\n    getMain: function getMain() {}\n  };\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables: getVariables,\n    getMain: getMain\n  };\n\n  function getVariables() {\n    return '\\nuniform sampler2D u_particles_x;\\nuniform sampler2D u_particles_y;\\n    ';\n  }\n\n  function getMain() {\n    return '\\n  vec2 v_particle_pos = vec2(\\n    decodeFloatRGBA(texture2D(u_particles_x, txPos)),\\n    decodeFloatRGBA(texture2D(u_particles_y, txPos))\\n  );\\n';\n  }\n}\n\n/***/ }),\n\n/***/ \"eBcr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventify = __webpack_require__(\"puH/\");\n\nmodule.exports = eventify({});\n\n/***/ }),\n\n/***/ \"gIFv\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = colorProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_makeStatCounter__ = __webpack_require__(\"V39N\");\n\n\n\n\n\n\nvar OUT_V_X = 6;\nvar OUT_V_Y = 7;\n/**\n * This program allows to change color of each particle. It works by\n * reading current velocities into a texture from the framebuffer. Once\n * velocities are read, it checks velocity scale and passes it to a draw program.\n */\nfunction colorProgram(ctx) {\n  var speedNeedsUpdate = true;\n  var gl = ctx.gl;\n\n  var velocity_y_texture, velocity_x_texture;\n  var particleStateResolution;\n  var pendingSpeedUpdate;\n  var numParticles;\n  var velocityCounter = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_makeStatCounter__[\"a\" /* default */])();\n  var velocity_x;\n  var velocity_y;\n\n  listenToEvents();\n\n  return {\n    updateCode: updateCode,\n    updateParticlesPositions: updateParticlesPositions,\n    onParticleInit: onParticleInit,\n    setColorMinMax: setColorMinMax,\n    requestSpeedUpdate: requestSpeedUpdate,\n    dispose: dispose\n  };\n\n  function listenToEvents() {\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.on('integration-timestep-changed', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.on('bbox-change', requestSpeedUpdate);\n  }\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.off('integration-timestep-changed', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.off('bbox-change', requestSpeedUpdate);\n    disposeTextures();\n  }\n\n  function disposeTextures() {\n    if (velocity_x_texture) gl.deleteTexture(velocity_x_texture);\n    if (velocity_y_texture) gl.deleteTexture(velocity_y_texture);\n  }\n\n  function requestSpeedUpdate() {\n    if (pendingSpeedUpdate) clearTimeout(pendingSpeedUpdate);\n    pendingSpeedUpdate = setTimeout(function () {\n      speedNeedsUpdate = true;\n      pendingSpeedUpdate = 0;\n    }, 50);\n  }\n\n  function setColorMinMax(program) {\n    gl.uniform2f(program.u_velocity_range, velocityCounter.getMin(), velocityCounter.getMax());\n  }\n\n  function onParticleInit() {\n    disposeTextures();\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n\n    velocity_x = new Uint8Array(numParticles * 4);\n    velocity_y = new Uint8Array(numParticles * 4);\n    velocity_x_texture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, velocity_x, particleStateResolution, particleStateResolution);\n    velocity_y_texture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, velocity_y, particleStateResolution, particleStateResolution);\n\n    requestSpeedUpdate();\n  }\n\n  function updateCode() {\n    requestSpeedUpdate();\n  }\n\n  function updateParticlesPositions(program) {\n    if (!speedNeedsUpdate || !velocity_x || !velocity_y) return;\n    speedNeedsUpdate = false;\n\n    // We assume this is called from update position program\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, velocity_x_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_X);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, velocity_y_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_Y);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    updateMinMax();\n  }\n\n  function updateMinMax() {\n    velocityCounter.reset();\n    // TODO: Do I want this to be async?\n    for (var i = 0; i < velocity_y.length; i += 4) {\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      var v = Math.sqrt(vx * vx + vy * vy);\n      velocityCounter.add(v);\n    }\n  }\n}\n\nfunction readFloat(buffer, offset) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__[\"b\" /* decodeFloatRGBA */])(buffer[offset + 0], buffer[offset + 1], buffer[offset + 2], buffer[offset + 3]);\n}\n\n/***/ }),\n\n/***/ \"h62Y\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makeScreenProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/**\n * Renders computed state onto the screen.\n */\n\n\nvar NO_TRANSFORM = { dx: 0, dy: 0, scale: 1 };\n\nfunction makeScreenProgram(ctx) {\n  var gl = ctx.gl,\n      canvasRect = ctx.canvasRect;\n\n\n  var screenTexture, backgroundTexture;\n  var boundBoxTextureTransform = { dx: 0, dy: 0, scale: 1 };\n  var lastRenderedBoundingBox = null;\n\n  // TODO: Allow customization? Last time I tried, I didn't like it too much.\n  // It was very easy to screw up the design, and the tool looked ugly :-/\n  var backgroundColor = { r: 19 / 255, g: 41 / 255, b: 79 / 255, a: 1 };\n\n  updateScreenTextures();\n  var screenProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, getScreenVertexShader(), getScreenFragmentShader());\n\n  var api = {\n    fadeOutLastFrame: fadeOutLastFrame,\n    renderCurrentScreen: renderCurrentScreen,\n    updateScreenTextures: updateScreenTextures,\n\n    boundingBoxUpdated: false\n  };\n\n  return api;\n\n  function fadeOutLastFrame() {\n    // render to the frame buffer\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, screenTexture);\n    gl.viewport(0, 0, canvasRect.width, canvasRect.height);\n\n    if (api.boundingBoxUpdated && lastRenderedBoundingBox) {\n      // We move the back texture, relative to the bounding box change. This eliminates\n      // particle train artifacts, though, not all of them: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n      // If you know how to improve this - please let me know.\n      boundBoxTextureTransform.dx = -(ctx.bbox.minX - lastRenderedBoundingBox.minX) / (ctx.bbox.maxX - ctx.bbox.minX);\n      boundBoxTextureTransform.dy = -(ctx.bbox.minY - lastRenderedBoundingBox.minY) / (ctx.bbox.maxY - ctx.bbox.minY);\n      boundBoxTextureTransform.scale = (ctx.bbox.maxX - ctx.bbox.minX) / (lastRenderedBoundingBox.maxX - lastRenderedBoundingBox.minX);\n      drawTexture(backgroundTexture, ctx.fadeOpacity, boundBoxTextureTransform);\n    } else {\n      drawTexture(backgroundTexture, ctx.fadeOpacity, NO_TRANSFORM);\n    }\n  }\n\n  function renderCurrentScreen() {\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, null);\n\n    saveLastBbox();\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    drawTexture(screenTexture, 1.0, NO_TRANSFORM);\n    gl.disable(gl.BLEND);\n\n    var temp = backgroundTexture;\n    backgroundTexture = screenTexture;\n    screenTexture = temp;\n\n    api.boundingBoxUpdated = false;\n    if (window.audioTexture) {\n      drawTexture(window.audioTexture, 1.0, NO_TRANSFORM);\n    }\n  }\n\n  function updateScreenTextures() {\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n    var emptyPixels = new Uint8Array(width * height * 4);\n    if (screenTexture) {\n      gl.deleteTexture(screenTexture);\n    }\n    if (backgroundTexture) {\n      gl.deleteTexture(backgroundTexture);\n    }\n\n    screenTexture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n    backgroundTexture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n  }\n\n  function saveLastBbox() {\n    if (!lastRenderedBoundingBox) {\n      lastRenderedBoundingBox = {\n        minX: ctx.bbox.minX,\n        minY: ctx.bbox.minY,\n        maxX: ctx.bbox.maxX,\n        maxY: ctx.bbox.maxY\n      };\n\n      return;\n    }\n\n    lastRenderedBoundingBox.minX = ctx.bbox.minX;\n    lastRenderedBoundingBox.minY = ctx.bbox.minY;\n    lastRenderedBoundingBox.maxX = ctx.bbox.maxX;\n    lastRenderedBoundingBox.maxY = ctx.bbox.maxY;\n  }\n\n  function drawTexture(texture, opacity, textureTransform) {\n    var program = screenProgram;\n    gl.useProgram(program.program);\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    // TODO: This index is very fragile. I need to find a way\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, texture, ctx.screenTextureUnit);\n    gl.uniform1i(program.u_screen, ctx.screenTextureUnit);\n\n    gl.uniform1f(program.u_opacity_border, 0.02);\n    gl.uniform1f(program.u_opacity, opacity);\n    gl.uniform3f(program.u_transform, textureTransform.dx, textureTransform.dy, textureTransform.scale);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n\nfunction getScreenVertexShader() {\n  return '// screen program\\nprecision highp float;\\n\\nattribute vec2 a_pos;\\nvarying vec2 v_tex_pos;\\nuniform vec3 u_transform;\\n\\nvoid main() {\\n    v_tex_pos = a_pos;\\n    vec2 pos = a_pos;\\n\\n    // This transformation tries to move texture (raster) to the approximate position\\n    // of particles on the current frame. This is needed to avoid rendering artifacts\\n    // during pan/zoom: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\\n\\n    // PS: I must admit, I wrote this formula through sweat and tears, and\\n    // I still have no idea why I don\\'t need to apply (pos.y - 0.5) to Y coordinate.\\n    // Is it because I use aspect ratio for bounding box?\\n    pos.x = (pos.x - 0.5) / u_transform.z - u_transform.x + 0.5 * u_transform.z;\\n    pos.y = pos.y / u_transform.z + u_transform.y;\\n\\n    pos = 1.0 - 2.0 * pos;\\n    gl_Position = vec4(pos, 0, 1);\\n}';\n}\n\nfunction getScreenFragmentShader() {\n  return 'precision highp float;\\nuniform sampler2D u_screen;\\nuniform float u_opacity;\\nuniform float u_opacity_border;\\n\\nvarying vec2 v_tex_pos;\\n\\nvoid main() {\\n  vec2 p = 1.0 - v_tex_pos;\\n  vec4 color = texture2D(u_screen, p);\\n\\n  // For some reason particles near border leave trace when we translate the texture\\n  // This is my dirty hack to fix it: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\\n  if (p.x < u_opacity_border || p.x > 1. - u_opacity_border || p.y < u_opacity_border || p.y > 1. - u_opacity_border) {\\n    gl_FragColor = vec4(0.);\\n  } else {\\n    // opacity fade out even with a value close to 0.0\\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\\n  }\\n}';\n}\n\n/***/ }),\n\n/***/ \"i69e\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n\n\n\n\n\n\n\nvar RungeKuttaIntegrator = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(RungeKuttaIntegrator, _BaseShaderNode);\n\n  function RungeKuttaIntegrator() {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, RungeKuttaIntegrator);\n\n    return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RungeKuttaIntegrator.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RungeKuttaIntegrator)).call(this));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(RungeKuttaIntegrator, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_h;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      return '\\nvec2 rk4(const vec2 point) {\\n  vec2 k1 = get_velocity( point );\\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\\n  vec2 k4 = get_velocity( point + k3 * u_h);\\n\\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\\n}';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n  vec2 velocity = rk4(pos);\\n';\n    }\n  }]);\n\n  return RungeKuttaIntegrator;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (RungeKuttaIntegrator);\n\n/***/ }),\n\n/***/ \"p0IO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = wglPanZoom;\n/**\n * Enables panning and zooming of canvas with vector field\n * \n * @param {HTMLCanvasElement} canvas that needs to be panned and zoomed\n * @param {*} updateBoundingBoxCallback callback that is called when vector field bounding box\n * needs to be updated\n */\nfunction wglPanZoom(canvas, updateBoundingBoxCallback) {\n  var lastDx = 0;\n  var lastDy = 0;\n  var lastScale = 1;\n\n  // We need to be moved at least this many pixels in order to let\n  // transform update bounding box.\n  var transformThreshold = 2.1;\n\n  return {\n    applyTransform: function applyTransform(newTransform) {\n      var dx = newTransform.x;\n      var dy = newTransform.y;\n\n      var dScale = lastScale - newTransform.scale;\n      if (dScale === 0 && Math.abs(dx - lastDx) < transformThreshold && Math.abs(dy - lastDy) < transformThreshold) {\n        // Wait for larger transform\n        return;\n      }\n\n      lastDx = dx;\n      lastDy = dy;\n      lastScale = newTransform.scale;\n\n      updateBoundingBoxCallback(newTransform);\n    },\n    getOwner: function getOwner() {\n      return canvas;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"pKWO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = drawParticlesProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__ = __webpack_require__(\"aZPT\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__ = __webpack_require__(\"3xg8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__audioProgram__ = __webpack_require__(\"94y8\");\n\n\n\n\n\n\n\nfunction drawParticlesProgram(ctx) {\n  var gl = ctx.gl;\n\n  var particleStateResolution, particleIndexBuffer;\n  var numParticles;\n\n  var currentVectorField = '';\n  var updatePositionProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__[\"a\" /* default */])(ctx);\n  var audioProgram;\n\n  var drawProgram;\n  initPrograms();\n\n  return {\n    onParticleInit: onParticleInit,\n    updateParticlesPositions: updateParticlesPositions,\n    drawParticles: drawParticles,\n    updateCode: updateCode,\n    updateColorMode: updateColorMode\n  };\n\n  function initPrograms() {\n    // need to update the draw graph because color mode shader has changed.\n    initDrawProgram();\n\n    if (__WEBPACK_IMPORTED_MODULE_4__config__[\"a\" /* default */].isAudioEnabled) {\n      if (audioProgram) audioProgram.dispose();\n      audioProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__audioProgram__[\"a\" /* default */])(ctx);\n    }\n  }\n\n  function initDrawProgram() {\n    if (drawProgram) drawProgram.unload();\n\n    var drawGraph = new __WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__[\"a\" /* default */](ctx.colorMode);\n    drawProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, drawGraph.getVertexShader(currentVectorField), drawGraph.getFragmentShader());\n  }\n\n  function updateParticlesPositions() {\n    ctx.frame += 1;\n    ctx.frameSeed = Math.random();\n\n    if (audioProgram) audioProgram.updateTextures();\n\n    updatePositionProgram.updateParticlesPositions();\n  }\n\n  function updateColorMode() {\n    initDrawProgram();\n  }\n\n  function updateCode(vfCode) {\n    ctx.frame = 0;\n    currentVectorField = vfCode;\n    updatePositionProgram.updateCode(vfCode);\n\n    initDrawProgram();\n  }\n\n  function onParticleInit() {\n    if (!currentVectorField) return;\n\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n    var particleIndices = new Float32Array(numParticles);\n    var particleStateX = new Uint8Array(numParticles * 4);\n    var particleStateY = new Uint8Array(numParticles * 4);\n\n    var minX = ctx.bbox.minX;var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n    for (var i = 0; i < numParticles; i++) {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * width + minX, particleStateX, i * 4); // randomize the initial particle positions\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * height + minY, particleStateY, i * 4); // randomize the initial particle positions\n\n      particleIndices[i] = i;\n    }\n\n    if (particleIndexBuffer) gl.deleteBuffer(particleIndexBuffer);\n    particleIndexBuffer = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createBuffer(gl, particleIndices);\n\n    updatePositionProgram.onParticleInit(particleStateX, particleStateY);\n  }\n\n  function drawParticles() {\n    var program = drawProgram;\n    gl.useProgram(program.program);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, particleIndexBuffer, program.a_index, 1);\n\n    updatePositionProgram.prepareToDraw(program);\n\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    gl.uniform1f(program.u_particles_res, particleStateResolution);\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.drawArrays(gl.POINTS, 0, numParticles);\n  }\n}\n\n/***/ }),\n\n/***/ \"pXNl\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = textureCollection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\n\n\nfunction textureCollection(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map(function (d, index) {\n    var textureInfo = {\n      texture: __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    };\n\n    return textureInfo;\n  });\n\n  return {\n    dispose: dispose,\n    bindTextures: bindTextures,\n    assignProgramUniforms: assignProgramUniforms,\n    length: dimensions.length,\n    textures: textures,\n    get: function get(i) {\n      return textures[i];\n    }\n  };\n\n  function assignProgramUniforms(program) {\n    textures.forEach(function (tInfo) {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(function (tInfo) {\n      return gl.deleteTexture(tInfo.texture);\n    });\n  }\n\n  function bindTextures(gl, program) {\n    textures.forEach(function (tInfo) {\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, tInfo.texture, tInfo.index);\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n}\n\n/***/ }),\n\n/***/ \"rvz5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  // I need to flash our more details before making any promises.\n  isAudioEnabled: false,\n  vectorLinesEnabled: false\n});\n\n/***/ }),\n\n/***/ \"vhRe\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n\n\n\n\n\n\n\nvar PanzoomTransform = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(PanzoomTransform, _BaseShaderNode);\n\n  function PanzoomTransform(config) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, PanzoomTransform);\n\n    // decode is used when we move particle read from the texture\n    // otherwise we write particle to texture and need to reverse transform\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (PanzoomTransform.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(PanzoomTransform)).call(this));\n\n    _this.decode = config && config.decode;\n    _this.srcPosName = config && config.posName || 'pos';\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(PanzoomTransform, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      if (this.decode) {\n        // TODO: Need to figure out how to not duplicate this.\n        return '\\n  uniform vec2 u_min;\\n  uniform vec2 u_max;\\n';\n      }\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      if (this.decode) {\n        return '\\n  // move particle position according to current transform\\n  vec2 du = (u_max - u_min);\\n  pos.x = ' + this.srcPosName + '.x * du.x + u_min.x;\\n  pos.y = ' + this.srcPosName + '.y * du.y + u_min.y;\\n';\n      }\n      return '\\n  pos.x = (' + this.srcPosName + '.x - u_min.x)/du.x;\\n  pos.y = (' + this.srcPosName + '.y - u_min.y)/du.y;\\n';\n    }\n  }]);\n\n  return PanzoomTransform;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (PanzoomTransform);\n\n/***/ })\n\n},[\"YJWA\"]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.f1fc2c12614895403646.js","import util from '../gl-utils';\nimport UpdatePositionGraph from '../shaderGraph/updatePositionGraph';\nimport ColorMode from './colorModes';\nimport makeReadProgram from './colorProgram';\nimport textureCollection from '../utils/textureCollection';\nimport makeStatCounter from '../utils/makeStatCounter';\nimport {decodeFloatRGBA} from '../utils/floatPacking';\nimport bus from '../bus';\n\nconst particlePositionShaderCodeBuilder = new UpdatePositionGraph();\n\nexport default function updatePositionProgram(ctx) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  var particleStateResolution;\n  var updateProgram;\n  var uniformParticleColor = { r: 77/255, g: 188/255, b: 201/255, a: 1  };\n  var readVelocity = makeReadProgram(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  var pendingVectorLines;\n\n  // TODO: need to make sure we are not leaking.\n  bus.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode,\n    updateParticlesPositions,\n    onParticleInit,\n    prepareToDraw,\n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    let fragment = particlePositionShaderCodeBuilder.getFragmentShader();\n    let vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    let newProgram = util.createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === ColorMode.VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n  \n  function onParticleInit(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = textureCollection(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = textureCollection(gl, dimensions, particleStateResolution);\n\n    readVelocity.onParticleInit();\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === ColorMode.UNIFORM) gl.uniform4f(program.u_particle_color, uniformParticleColor.r, uniformParticleColor.g, uniformParticleColor.b, uniformParticleColor.a);\n    else if (colorMode === ColorMode.VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions() {\n    var program = updateProgram;\n    gl.useProgram(program.program);\n  \n    util.bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n  \n    if (ctx.audioTexture) {\n      // TODO: I need to manage inputs better. E.g. color program might also need it.\n      util.bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n  \n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n  \n    // Draw each coordinate individually\n    for(var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound\n    if (ctx.colorMode === ColorMode.VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    if (pendingVectorLines) {\n      processVectorLinesRequest(program);\n      pendingVectorLines = null;\n    }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  function putVectorLinesRequestIntoQueue(request) {\n    pendingVectorLines = request;\n  }\n\n  function processVectorLinesRequest(program) {\n    var dimensions = [{\n      name: 'x',\n      particleState: pendingVectorLines.x\n    }, {\n      name: 'y',\n      particleState: pendingVectorLines.y\n    }];\n\n    // We create temporary textures and load requested positions in there\n    var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n    var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n    var texturesForRead = textureCollection(gl, dimensions, resolutionOfParticlesInRequest);\n    var texturesForWrite = textureCollection(gl, dimensions, resolutionOfParticlesInRequest);\n\n    texturesForRead.bindTextures(gl, program);\n\n    // Then we request coordinates out from GPU for each dimension\n    var writeInfo = texturesForWrite.get(0);\n    gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n    util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_x = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    gl.uniform1i(program.u_out_coordinate, 7); // v_y\n    writeInfo = texturesForWrite.get(1);\n    util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_y = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    texturesForWrite.dispose();\n    texturesForRead.dispose();\n\n    var xStats = makeStatCounter();\n    var yStats = makeStatCounter();\n\n    var decoded_velocity_x = new Float32Array(numParticles);\n    var decoded_velocity_y = new Float32Array(numParticles);\n    for(var i = 0; i < velocity_y.length; i+=4) {\n      var idx = i/4;\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      decoded_velocity_x[idx] = vx;\n      decoded_velocity_y[idx] = vy;\n      xStats.add(vx);\n      yStats.add(vy);\n    }\n\n    var vectorLineInfo = {\n      xStats,\n      yStats,\n      decoded_velocity_x,\n      decoded_velocity_y,\n      resolution: resolutionOfParticlesInRequest\n    };\n\n    bus.fire('vector-line-ready', vectorLineInfo);\n  }\n}\n\nfunction readFloat(buffer, offset) {\n    return decodeFloatRGBA(\n      buffer[offset + 0],\n      buffer[offset + 1],\n      buffer[offset + 2],\n      buffer[offset + 3]\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/updatePositionProgram.js","export default class BaseShaderNode {\n  constructor() { }\n  getDefines() { return ''; }\n  getFunctions() { return ''; }\n  getMainBody() { return ''; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/BaseShaderNode.js","export default {\n  UNIFORM: 1,\n  VELOCITY: 2,\n  ANGLE: 3\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/colorModes.js","import bus from '../bus';\nimport glUtil from '../gl-utils';\n\nexport default audioProgram;\n\nfunction audioProgram(ctx) {\n  var gl = ctx.gl;\n\n  var audioWidth = 8, audioHeight = 8;\n  var audioBuffer = new Uint8Array(audioWidth * audioHeight * 4);\n  var audioTexture = glUtil.createTexture(gl, gl.NEAREST, audioBuffer, audioWidth, audioHeight);\n  var audioDirty = false;\n  ctx.audioTexture = audioTexture;\n\n  bus.on('audio', updateAudioBuffer);\n\n  return {\n    updateTextures,\n    dispose\n  };\n\n  function dispose() {\n    bus.off('audio', updateAudioBuffer);\n    gl.deleteTexture(audioTexture);\n  }\n\n  function updateTextures() {\n    if (!audioDirty) return;\n    audioDirty = false;\n\n    // TODO: This should come from fftSize?\n    var width = 5, height = 5;\n    gl.bindTexture(gl.TEXTURE_2D, audioTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, audioBuffer);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  function updateAudioBuffer(newBuffer) {\n    audioBuffer = newBuffer;\n    audioDirty = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/audioProgram.js","/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\nexport default {\n  createTexture: createTexture,\n  bindFramebuffer: bindFramebuffer,\n  createProgram: createProgram, \n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  bindTexture: bindTexture\n}\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nfunction bindFramebuffer(gl, framebuffer, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n      var attribute = gl.getActiveAttrib(program, i);\n      wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n      var uniform = gl.getActiveUniform(program, i);\n      wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper; \n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/gl-utils.js","import BaseShaderNode from './BaseShaderNode';\nimport snoise from './parts/simplex-noise';\n\nexport default class UserDefinedVelocityFunction extends BaseShaderNode {\n  constructor(updateCode) {\n    super();\n    this.updateCode = updateCode || '';\n  }\n\n  setNewUpdateCode(newUpdateCode) {\n    this.updateCode = newUpdateCode;\n  }\n\n  getDefines() {\n    return `\nuniform float frame;\nuniform sampler2D u_audio;\n\n#define PI 3.1415926535897932384626433832795\n`\n  }\n\n  getFunctions() {\n  // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n  // TODO: Do I need to inject snoise only when it's used?\n    return `\n${snoise}\n\nvec2 rotate(vec2 p,float a) {\n\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\n}\n\n// TODO: This will change. Don't use it.\nfloat audio(float index) {\n  float rgbI = floor(index/4.);\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\n  vec4 rgba = texture2D(u_audio, txPos);\n  \n  float offset = mod(index, 4.);\n  if (offset == 0.) return rgba[0];\n  if (offset == 1.) return rgba[1];\n  if (offset == 2.) return rgba[2];\n  return rgba[3];\n}\n\nvec2 get_velocity(const vec2 p) {\n  vec2 v = vec2(0.);\n  ${this.updateCode ? this.updateCode : ''}\n  return v;\n}\n  `\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/UserDefinedVelocityFunction.js","/**\n * This file encodes/decodes float values into 32bit rgba array\n * \n * It is based on https://computergraphics.stackexchange.com/questions/4151/webgl-packing-unpacking-functions-that-can-roundtrip-all-typical-32-bit-floats\n * and it is not perfect. If you know how to improve it - please let me know.\n */\n\n/**\n * Encodes float value into output array\n * @param {float} val - value to be encode\n * @param {Uint8Array} out  - array where encoded value needs to be written.\n * @param {Number} writeOffset - offset in the original array where values should be written.\n */\nexport function encodeFloatRGBA(val, out, writeOffset) {\n  if (val == 0.0) {\n    out[writeOffset + 0] = 0; out[writeOffset + 1] = 0; out[writeOffset + 2] = 0; out[writeOffset + 3] = 0;\n    return;\n  }\n\n  var mag = Math.abs(val);\n  var exponent = Math.floor(Math.log2(mag));\n  // Correct log2 approximation errors.\n  exponent += (exp2(exponent) <= mag / 2.0) ? 1 : 0;\n  exponent -= (exp2(exponent) > mag) ? 1 : 0;\n\n  var mantissa;\n  if (exponent > 100.0) {\n      mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n  } else {\n      mantissa = mag / (exp2(exponent)) - 1.0;\n  }\n\n  var a = exponent + 127.0;\n  mantissa *= 256.0;\n  var b = Math.floor(mantissa);\n  mantissa -= b;\n  mantissa *= 256.0;\n  var c = Math.floor(mantissa);\n  mantissa -= c;\n  mantissa *= 128.0;\n  var d = Math.floor(mantissa) * 2.0 + ((val < 0.0) ? 1: 0);\n\n  out[writeOffset + 0] = a; out[writeOffset + 1] = b; out[writeOffset + 2] = c; out[writeOffset + 3] = d;\n}\n\n/**\n * Given byte values in range [0..255] returns decoded float value.\n * \n * @param {Byte} r \n * @param {Byte} g \n * @param {Byte} b \n * @param {Byte} a \n */\nexport function decodeFloatRGBA(r, g, b, a) {\n  var A = Math.floor(r + 0.5);\n  var B = Math.floor(g + 0.5);\n  var C = Math.floor(b + 0.5);\n  var D = Math.floor(a + 0.5);\n\n  var exponent = A - 127.0;\n  var sign = 1.0 - (D % 2.0) * 2.0;\n  var mantissa = ((A > 0.0) ? 1 : 0)\n                  + B / 256.0\n                  + C / 65536.0\n                  + Math.floor(D / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n\nfunction exp2(exponent) { return Math.exp(exponent * Math.LN2); }\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/floatPacking.js","/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\nimport util from './gl-utils';\nimport makePanzoom from 'panzoom';\nimport bus from './bus';\nimport appState from './appState';\nimport wglPanZoom from './wglPanZoom';\nimport getParsedVectorFieldFunction from './utils/getParsedVectorFieldFunction';\n\nimport createScreenProgram from './programs/screenProgram';\nimport createDrawParticlesProgram from './programs/drawParticlesProgram';\n\n/**\n * Kicks offs the app rendering. Initialized before even vue is loaded.\n * \n * @param {WebGLRenderingContext} gl \n */\nexport default function initScene(gl) {\n  // Canvas size management\n  var canvasRect = { width: 0, height: 0, top: 0, left: 0 };\n  setWidthHeight(gl.canvas.width, gl.canvas.height);\n  window.addEventListener('resize', onResize, true);\n\n  // Video capturing is available in super advanced mode. You'll need to install\n  // and start https://github.com/greggman/ffmpegserver.js \n  // Then type in the console: window.startRecord();\n  // This will trigger frame-by-frame recording (it is slow). To stop it, call window.stopRecord();\n  bus.on('start-record', startRecord);\n  bus.on('stop-record', stopRecord);\n  bus.on('glsl-parser-ready', validateCode);\n  var currentCapturer = null;\n\n  // TODO: It feels like bounding box management needs to be moved out from here.\n  // TODO: bbox needs to be a class with width/height properties.\n  var bbox = appState.getBBox() || {};\n  var currentPanZoomTransform = {\n    scale: 1,\n    x: 0,\n    y: 0\n  };\n\n  // How many particles do we want?\n  var particleCount = appState.getParticleCount();\n  // What is the current code?\n  var currentVectorFieldCode = appState.getCode();\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST); \n\n  // TODO: Remove local variables in favour of context.\n\n  // Context variable is a way to share rendering state between multiple programs. It has a lot of stuff on it.\n  // I found that it's the easiest way to work in state-full world of WebGL.\n  // Until I discover a better way to write WebGL code.\n  var ctx = {\n    gl,\n    bbox,\n    canvasRect,\n\n    framebuffer: gl.createFramebuffer(),\n\n    // This is used only to render full-screen rectangle. Main magic happens inside textures.\n    quadBuffer: util.createBuffer(gl, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1])),\n\n    colorMode: appState.getColorMode(),\n\n    // This defines texture unit for screen rendering. First few indices are taken by textures\n    // that compute particles position/color\n    // TODO: I need to find a better way to manage this.\n    screenTextureUnit: 3,\n\n    // This is where color texture needs to be bound.\n    colorTextureUnit: 2,\n\n    integrationTimeStep: appState.getIntegrationTimeStep(),\n\n    // On each frame the likelihood for a particle to reset its position is this:\n    dropProbability: appState.getDropProbability(),\n\n    // current frame number. Reset every time when new shader is compiled\n    frame: 0,\n\n    // Texture size to store particles' positions\n    particleStateResolution: 0,\n\n    // How quickly we should fade previous frame (from 0..1)\n    fadeOpacity: appState.getFadeout(),\n\n    // Ignore this one for a moment. Yes, the app support web audio API,\n    // but it's rudimentary, so... shhh! it's a secret.\n    // Don't shhh on me!\n    audioTexture: null\n  };\n\n  // Frame management\n  var lastAnimationFrame;\n  var isPaused = false;\n\n  // screen rendering;\n  var screenProgram = createScreenProgram(ctx);\n  var drawProgram = createDrawParticlesProgram(ctx);\n\n  // For delayed parsing result verification (e.g. when vue is loaded it\n  // can request us to see if there were any errors)\n  var parserResult;\n\n  loadCodeFromAppState();\n\n  // particles\n  initParticles(particleCount);\n\n  var api = {\n    start: nextFrame,\n    stop,\n    dispose,\n    resetBoundingBox,\n    moveBoundingBox,\n\n    setPaused,\n\n    updateVectorField,\n    getCurrentCode,\n\n    getParticlesCount,\n    setParticlesCount,\n\n    setFadeOutSpeed,\n    getFadeOutSpeed,\n\n    setDropProbability,\n    getDropProbability,\n\n    getIntegrationTimeStep,\n    setIntegrationTimeStep,\n\n    setColorMode,\n    getColorMode,\n\n    getLastParserResult,\n\n    getCanvasRect() {\n      // We trust they don't do anything bad with this ...\n      return canvasRect;\n    },\n\n    getBoundingBox() {\n      // again, we trust. Maybe to much?\n      return ctx.bbox;\n    }\n  }\n\n  var panzoom = initPanzoom(); \n  restoreBBox();\n\n  setTimeout(() => {\n    bus.fire('scene-ready', api);\n  })\n\n  return api;\n\n  function getLastParserResult() {\n    return parserResult && parserResult.error;\n  }\n\n  function moveBoundingBox(changes) {\n    if (!changes) return;\n    var parsedBoundingBox = Object.assign({}, ctx.bbox);\n\n    assignIfPossible(changes, 'minX', parsedBoundingBox);\n    assignIfPossible(changes, 'minY', parsedBoundingBox);\n    assignIfPossible(changes, 'maxX', parsedBoundingBox);\n    assignIfPossible(changes, 'maxY', parsedBoundingBox);\n\n    // for Y axis changes we need to preserve aspect ration, which means\n    // we also need to change X...\n    if (changes.minY !== undefined || changes.maxY !== undefined) {\n      // adjust values for X\n      var heightChange = Math.abs(parsedBoundingBox.minY - parsedBoundingBox.maxY)/Math.abs(ctx.bbox.minY - ctx.bbox.maxY);\n      var cx = (ctx.bbox.maxX + ctx.bbox.minX)/2;\n      var prevWidth = (ctx.bbox.maxX - ctx.bbox.minX)/2;\n      parsedBoundingBox.minX = cx - prevWidth * heightChange;\n      parsedBoundingBox.maxX = cx + prevWidth * heightChange;\n\n    }\n\n    applyBoundingBox(parsedBoundingBox);\n  }\n\n  function assignIfPossible(change, key, newBoundingBox) {\n    var value = Number.parseFloat(change[key]);\n    if (Number.isFinite(value)) {\n      newBoundingBox[key] = value;\n    }\n  }\n\n  function startRecord(capturer) {\n    currentCapturer = capturer;\n  }\n\n  function stopRecord() {\n    currentCapturer = null;\n  }\n\n  function setColorMode(x) {\n    var mode = parseInt(x, 10);\n    appState.setColorMode(mode);\n    ctx.colorMode = appState.getColorMode();\n    drawProgram.updateColorMode(mode);\n  }\n\n  function getColorMode() {\n    return appState.getColorMode();\n  }\n\n  function getIntegrationTimeStep() {\n    return appState.getIntegrationTimeStep();\n  }\n\n  function setIntegrationTimeStep(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      ctx.integrationTimeStep = f;\n      appState.setIntegrationTimeStep(f);\n      bus.fire('integration-timestep-changed', f);\n    }\n  }\n\n  function setPaused(shouldPause) {\n    isPaused = shouldPause;\n    nextFrame();\n  }\n\n  // Main screen fade out configuration\n  function setFadeOutSpeed(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      ctx.fadeOpacity = f;\n      appState.setFadeout(f);\n    }\n  }\n\n  function getFadeOutSpeed() {\n    return appState.getFadeout();\n  }\n\n  // Number of particles configuration\n  function getParticlesCount() {\n    return appState.getParticleCount();\n  }\n\n  function setParticlesCount(newParticleCount) {\n    if (!Number.isFinite(newParticleCount)) return;\n    if (newParticleCount === particleCount) return;\n    if (newParticleCount < 1) return;\n\n    initParticles(newParticleCount);\n\n    particleCount = newParticleCount;\n    appState.setParticleCount(newParticleCount);\n  }\n\n  // drop probability\n  function setDropProbability(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      // TODO: Do I need to worry about duplication/clamping?\n      appState.setDropProbability(f);\n      ctx.dropProbability = f;\n    }\n  }\n\n  function getDropProbability() {\n    return appState.getDropProbability();\n  }\n\n  // current code;\n  function getCurrentCode() {\n    return appState.getCode();\n  }\n\n  function loadCodeFromAppState() {\n    let persistedCode = appState.getCode();\n    if (persistedCode) {\n      let result = trySetNewCode(persistedCode);\n      if (!result) return; // This means we set correctly;\n      // If we get here - something went wrong. see the console\n      console.error('Failed to restore previous vector field: ', result.error);\n    }\n    // we either failed or we want a default vector field\n    trySetNewCode(appState.getDefaultCode());\n  }\n\n  function updateVectorField(vectorFieldCode) {\n    if (vectorFieldCode === currentVectorFieldCode) return getLastParserResult();\n\n    let result = trySetNewCode(vectorFieldCode);\n    if (result && result.error) return result;\n\n    currentVectorFieldCode = vectorFieldCode;\n    appState.saveCode(vectorFieldCode);\n  }\n\n  function validateCode() {\n    parserResult = getParsedVectorFieldFunction(currentVectorFieldCode);\n    bus.fire('glsl-parser-result-changed', parserResult.error);\n  }\n\n  function trySetNewCode(vectorFieldCode) {\n    // step 1 - run through parser\n    parserResult = getParsedVectorFieldFunction(vectorFieldCode);\n\n    if (parserResult.error) {\n      return parserResult.error;\n    }\n\n    // step 2 - run through real webgl\n    try {\n      drawProgram.updateCode(parserResult.code);\n    } catch (e) {\n      return {\n        error: e.message\n      };\n    }\n  }\n\n  function onResize() {\n    setWidthHeight(window.innerWidth, window.innerHeight);\n\n    screenProgram.updateScreenTextures();\n\n    updateBoundingBox(currentPanZoomTransform);\n  }\n\n  function setWidthHeight(w, h) {\n    var dx = Math.max(w * 0.02, 30);\n    var dy = Math.max(h * 0.02, 30);\n    canvasRect.width = w + 2 * dx;\n    canvasRect.height = h + 2 * dy;\n    canvasRect.top = - dy;\n    canvasRect.left = - dx;\n\n\n    let canvas = gl.canvas;\n    canvas.width = canvasRect.width;\n    canvas.height = canvasRect.height;\n    canvas.style.left = (-dx) + 'px';\n    canvas.style.top = (-dy) + 'px';\n  }\n\n  function dispose() {\n      stop();\n      panzoom.dispose();\n      window.removeEventListener('resize', onResize, true);\n  }\n\n  function nextFrame() {\n    if (lastAnimationFrame) return;\n\n    if (isPaused) return;\n\n    lastAnimationFrame = requestAnimationFrame(draw);\n  }\n\n  function stop() {\n    cancelAnimationFrame(lastAnimationFrame);\n    lastAnimationFrame = 0;\n  }\n\n  function draw() {\n    lastAnimationFrame = 0;\n\n    drawScreen();\n\n    if (currentCapturer) currentCapturer.capture(gl.canvas);\n\n    nextFrame();\n  }\n\n  function drawScreen() {\n    screenProgram.fadeOutLastFrame()\n    drawProgram.drawParticles();\n    screenProgram.renderCurrentScreen();\n    drawProgram.updateParticlesPositions();\n  }\n\n  // TODO: Rename to updateParticlesCount()\n  function initParticles(numParticles) {\n    // we create a square texture where each pixel will hold a particle position encoded as RGBA\n    ctx.particleStateResolution = Math.ceil(Math.sqrt(numParticles));\n    drawProgram.onParticleInit();\n  }\n\n  function initPanzoom() {\n    let initializedPanzoom = makePanzoom(gl.canvas, {\n      zoomSpeed: 0.025,\n      controller: wglPanZoom(gl.canvas, updateBoundingBox)\n    });\n\n    return initializedPanzoom;\n  }\n\n  function restoreBBox() {\n    var savedBBox = appState.getBBox();\n    var {width, height} = canvasRect;\n\n    let sX = Math.PI * Math.E;\n    let sY = Math.PI * Math.E;\n    let tX = 0;\n    let tY = 0;\n    if (savedBBox) {\n      sX = savedBBox.maxX - savedBBox.minX;\n      sY = savedBBox.maxY - savedBBox.minY;\n      // TODO: Not sure if this is really the best way to do it.\n      // var ar = width/height;\n      tX = width * (savedBBox.minX + savedBBox.maxX)/2;\n      tY = width * (savedBBox.minY + savedBBox.maxY)/2;\n    }\n\n    var w2 = sX * width/2;\n    var h2 = sY * height/2;\n    panzoom.showRectangle({\n      left: -w2 + tX,\n      top: -h2 - tY,\n      right: w2 + tX,\n      bottom: h2 - tY ,\n    });\n  }\n\n  function updateBoundingBox(transform) {\n    screenProgram.boundingBoxUpdated = true;\n\n    currentPanZoomTransform.x = transform.x;\n    currentPanZoomTransform.y = transform.y;\n    currentPanZoomTransform.scale = transform.scale;\n\n    var {width, height} = canvasRect;\n\n    var minX = clientX(0);\n    var minY = clientY(0);\n    var maxX = clientX(width);\n    var maxY = clientY(height);\n\n    // we divide by width to keep aspect ratio\n    // var ar = width/height;\n    var p = 10000;\n    bbox.minX = Math.round(p * minX/width)/p;\n    bbox.minY = Math.round(p * -minY/width)/p;\n    bbox.maxX = Math.round(p * maxX/width)/p;\n    bbox.maxY = Math.round(p * -maxY/ width)/p;\n\n\n    appState.saveBBox(bbox);\n\n    bus.fire('bbox-change', bbox);\n\n    function clientX(x) {\n      return (x - transform.x)/transform.scale;\n    }\n\n    function clientY(y) {\n      return (y - transform.y)/transform.scale;\n    }\n  }\n\n  function resetBoundingBox() {\n    var w = Math.PI * Math.E * 0.5;\n    var h = Math.PI * Math.E * 0.5;\n\n    applyBoundingBox({\n      minX: -w,\n      minY: -h,\n      maxX: w,\n      maxY: h\n    })\n  }\n\n  function applyBoundingBox(boundingBox) {\n    appState.saveBBox(boundingBox, /* immediate = */ true);\n    restoreBBox();\n    // a hack to trigger panzoom event\n    panzoom.moveBy(0, 0, false);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/scene.js","//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvar code = `\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/simplex-noise.js","/**\n * This module parses user defined vector field code.\n */\n\nimport bus from '../bus';\n\n// This is naive parser that is being used until the real `glsl-parser`\n// is loaded asynchronously. This parser assumes there are no errors\n// TODO: maybe I should be more careful here?\nvar glslParser = {\n  check(code) {\n    return {\n      code,\n      log: {\n        errorCount: 0\n      }\n    };\n  }\n};\n\n// glsl-parser is ~179KB uncompressed, we don't want to wait until it is downloaded.\n// So we load it asynchronously...\nrequire.ensure('glsl-parser', () => {\n  // ... and replace the naive parser with the real one, when ready.\n  glslParser = require('glsl-parser');\n\n  // notify interested parties, so that they can recheck code if they wish.\n  bus.fire('glsl-parser-ready'); \n});\n\nvar vectorFieldGlobals = `\nimport {\n\n  float PI;\n  float snoise(vec2 v);\n  float frame;\n  vec2 rotate(vec2 p,float a);\n  float audio(float index);\n}`;\n\n/**\n * Given a string, verifies that it is a valid glsl code for a vector field,\n * and then returns code + log.\n * \n * @param {String} vectorFieldCode \n */\nexport default function getParsedVectorFieldFunction(vectorFieldCode) {\n  // TODO: what if we want to support 3d?\n  var vectorFieldParsedCode = `\nvec2 velocity(vec2 p) {\nvec2 v = vec2(0., 0.);\n${vectorFieldCode}\nreturn v;\n}`\n  var parserResult = glslParser.check(vectorFieldParsedCode, { globals: vectorFieldGlobals });\n  parserResult.code = vectorFieldCode;\n\n  if (parserResult.log.errorCount) parserResult.error = parserError(parserResult.log);\n\n  return parserResult;\n}\n\nfunction parserError(log) {\n  let diag = log.diagnostics[0];\n  // TODO probably need to check kind (errors ar 0, warnings are 1)\n  let firstError = diag.range;\n  let lineColumn = firstError.lineColumn();\n  let source = firstError.source;\n  let offset = source._lineOffsets[lineColumn.line]\n  let line = source.contents.substr(offset,  lineColumn.column);\n  line += source.contents.substring(firstError.start, firstError.end);\n  let prefix = 'Line ' + lineColumn.line + ': ';\n  let diagText = diag.text;\n  return {\n    error: \n      prefix + line + '\\n' +\n      whitespace(prefix.length) + whitespace(lineColumn.column) + '^',\n    errorDetail: diagText,\n    isFloatError: isFloatError(diagText)\n  };\n}\n\nfunction isFloatError(diagText) {\n  return diagText.indexOf('\"int\"') > -1 &&\n    diagText.indexOf('\"float\"')  > -1;\n}\n\nfunction whitespace(length) {\n  return new Array(length + 1).join(' ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/getParsedVectorFieldFunction.js","import queryState from 'query-state';\nimport bus from './bus';\nimport ColorModes from './programs/colorModes';\n\nvar qs = queryState();\nvar currentState = qs.get();\n\n// var defaultVectorField = `v.x = -p.y;\n// v.y = p.x;\n// `;\nvar defaultVectorField = `v.x = 0.1 * p.y;\nv.y = -0.2 * p.y;`\n\nvar pendingSave;\nvar defaults = {\n  timeStep: 0.01,\n  dropProbability: 0.009,\n  particleCount: 10000,\n  fadeout: .998,\n  colorMode: ColorModes.UNIFORM\n}\n\nlet settingsPanel = {\n  collapsed: window.innerWidth < 600 ? true : false,\n};\n\nexport default {\n  settingsPanel,\n  saveBBox,\n  getBBox,\n  saveCode,\n  getCode,\n  getDefaultCode,\n\n  getDropProbability,\n  setDropProbability,\n\n  getIntegrationTimeStep,\n  setIntegrationTimeStep,\n\n  getParticleCount,\n  setParticleCount,\n\n  getFadeout,\n  setFadeout,\n\n  getColorMode,\n  setColorMode\n}\n\nqs.onChange(function(appState) {\n  bus.fire('scene-ready', window.scene);\n});\n\nfunction getColorMode() {\n  let colorMode = qs.get('cm');\n  return defined(colorMode) ? colorMode : defaults.colorMode;\n}\n\nfunction setColorMode(colorMode) {\n  if (!defined(colorMode)) return;\n  qs.set({cm: colorMode});\n  currentState.cm = colorMode;\n}\n\nfunction getFadeout() {\n  let fadeout = qs.get('fo');\n  return defined(fadeout) ? fadeout : defaults.fadeout;\n}\n\nfunction setFadeout(fadeout) {\n  if (!defined(fadeout)) return;\n  qs.set({fo: fadeout});\n  currentState.fo = fadeout;\n}\n\nfunction getParticleCount() {\n  let particleCount = qs.get('pc');\n  return defined(particleCount) ? particleCount : defaults.particleCount;\n}\n\nfunction setParticleCount(particleCount) {\n  if (!defined(particleCount)) return;\n  qs.set({pc: particleCount});\n  currentState.pc = particleCount;\n}\n\nfunction getIntegrationTimeStep() {\n  let timeStep = qs.get('dt');\n  return defined(timeStep) ? timeStep : defaults.timeStep;\n}\n\nfunction setIntegrationTimeStep(dt) {\n  if (!defined(dt)) return;\n  qs.set({dt: dt})\n  currentState.dt = dt;\n}\n\nfunction getDropProbability() {\n  let dropProbability = qs.get('dp');\n  return defined(dropProbability) ? dropProbability : defaults.dropProbability;\n}\n\nfunction setDropProbability(dropProbability) {\n  if (!defined(dropProbability)) return;\n  clamp(dropProbability, 0, 1);\n  qs.set({dp: dropProbability})\n}\n\nfunction getBBox() {\n  let cx = qs.get('cx');\n  let cy = qs.get('cy');\n  let w = qs.get('w');\n  let h = qs.get('h');\n\n  let bboxDefined = defined(cx) && defined(cy) && defined(w) && defined(h);\n  if (!bboxDefined) return;\n\n  let w2 = w/2;\n  let h2 = h/2;\n  var p = 10000;\n  return {\n    minX: Math.round(p * (cx - w2))/p,\n    maxX: Math.round(p * (cx + w2))/p,\n    minY: Math.round(p * (cy - h2))/p,\n    maxY: Math.round(p * (cy + h2))/p\n  };\n}\n\nfunction saveBBox(bbox, immediate = false) {\n  if(pendingSave) {\n    clearTimeout(pendingSave);\n    pendingSave = 0;\n  }\n\n  if (immediate) saveReally(bbox);\n  else {\n    pendingSave = setTimeout(() => saveReally(bbox), 300);\n  }\n}\n\nfunction saveReally(bbox) {\n  pendingSave = 0;\n  var bbox = {\n    cx: (bbox.minX + bbox.maxX) * 0.5,\n    cy: (bbox.minY + bbox.maxY) * 0.5,\n    w: (bbox.maxX - bbox.minX),\n    h: (bbox.maxX - bbox.minX)\n  }\n\n  if (bbox.w <= 0 || bbox.h <= 0) return;\n\n  qs.set(bbox);\n\n  currentState.cx = bbox.cx;\n  currentState.cy = bbox.cy;\n  currentState.w = bbox.w;\n  currentState.h = bbox.h;\n}\n\nfunction getCode() {\n  return qs.get('code') || defaultVectorField;\n}\n\nfunction getDefaultCode() {\n  return defaultVectorField;\n}\n\nfunction saveCode(code) {\n  qs.set({\n    code: code\n  });\n  currentState.code = code;\n}\n\nfunction defined(number) {\n  return Number.isFinite(number);\n}\n\nfunction clamp(x, min, max) {\n  return x < min ? min :\n        (x > max) ? max : x;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/appState.js","import BaseShaderNode from './BaseShaderNode';\nimport TexturePositionNode from './TexturePositionNode';\nimport renderNodes from './renderNodes';\nimport UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport PanzoomTransform from './PanzoomTransform';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\n\nexport default class UpdatePositionGraph {\n  constructor(options) {\n    this.readStoredPosition = new TexturePositionNode(/* isDecode = */ true);\n    this.udfVelocity = new UserDefinedVelocityFunction();\n    this.integratePositions = new RungeKuttaIntegrator();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new TexturePositionNode(/* isDecode = */ false);\n    this.panZoomDecode = new PanzoomTransform({decode: true});\n    this.panZoomEncode = new PanzoomTransform({decode: false});\n\n    this.colorMode = options && options.colorMode;\n  }\n\n  setCustomVectorField(velocityCode) {\n    this.udfVelocity.setNewUpdateCode(velocityCode);\n  }\n\n  getVertexShader () {\n    return `precision highp float;\n\nattribute vec2 a_pos;\nvarying vec2 v_tex_pos;\nuniform vec2 u_min;\nuniform vec2 u_max;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\n}`\n  }\n\n  getFragmentShader() {\n    var nodes = [\n      this.readStoredPosition,\n      this.dropParticles,\n      this.udfVelocity,\n      this.integratePositions, {\n        getMainBody() {\n          return `\n  vec2 newPos = pos + velocity;\n  `\n        }\n      },\n      this.writeComputedPosition\n    ];\n    return renderNodes(nodes);\n  }\n}\n\nclass RandomParticleDropper extends BaseShaderNode {\n  getDefines() {\n    return `\nuniform float u_drop_rate;\nuniform float u_rand_seed;\nuniform vec2 u_min;\nuniform vec2 u_max;\n`\n  }\n\n  getFunctions() {\n    // TODO: Ideally this node should probably depend on\n    // random number generator node, so that we don't duplicate code\n    return `\n// pseudo-random generator\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\nfloat rand(const vec2 co) {\n    float t = dot(rand_constants.xy, co);\n    return fract(sin(t) * (rand_constants.z + t));\n}\n`\n  }\n\n  getMainBody() {\n    return `\n  // a random seed to use for the particle drop\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\n  float drop = step(1.0 - u_drop_rate, rand(seed));\n\n  // TODO: This can be customized to produce various emitters\n  // random_pos is in range from 0..1, we move it to the bounding box:\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\n  pos = mix(pos, random_pos, drop);\n`;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/updatePositionGraph.js","\nexport default function renderNodes(nodes) {\n  let code = [] \n\n  nodes.forEach(node => { if (node.getDefines) addToCode(node.getDefines()); });\n  nodes.forEach(node => { if (node.getFunctions) addToCode(node.getFunctions()); });\n\n  addToCode('void main() {')\n    nodes.forEach(node => { if (node.getMainBody) addToCode(node.getMainBody()); });\n  addToCode('}')\n  return code.join('\\n');\n\n  function addToCode(line) {\n    if (line) code.push(line)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/renderNodes.js","/**\n * A simple interface to compute eventual min/max \n */\nexport default function makeStatCounter() {\n  var min, max;\n\n  var api = {\n    getMin() { return min; },\n    getMax() { return max; },\n    add(x) {\n      if (x < min) min = x;\n      if (x > max) max = x;\n    },\n    reset: reset\n  };\n\n  return api;\n\n  function reset() {\n    min = Number.POSITIVE_INFINITY;\n    max = Number.NEGATIVE_INFINITY;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/makeStatCounter.js","const code = `\nhighp float decodeFloatRGBA( vec4 v ) {\n  float a = floor(v.r * 255.0 + 0.5);\n  float b = floor(v.g * 255.0 + 0.5);\n  float c = floor(v.b * 255.0 + 0.5);\n  float d = floor(v.a * 255.0 + 0.5);\n\n  float exponent = a - 127.0;\n  float sign = 1.0 - mod(d, 2.0)*2.0;\n  float mantissa = float(a > 0.0)\n                  + b / 256.0\n                  + c / 65536.0\n                  + floor(d / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/decodeFloatRGBA.js","import BaseShaderNode from './BaseShaderNode';\nimport encodeFloatRGBA from './parts/encodeFloatRGBA';\nimport decodeFloatRGBA from './parts/decodeFloatRGBA';\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\nexport default class TexturePosition extends BaseShaderNode {\n  constructor(isDecode) {\n    super();\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    this.isDecode = isDecode;\n  }\n\n  getFunctions() {\n    if (this.isDecode) {\n      return `\n    ${encodeFloatRGBA}\n    ${decodeFloatRGBA}\n`\n    }\n  }\n\n  getDefines() {\n    if (this.isDecode) {\n      // TODO: How to avoid duplication and silly checks?\n    return `\nprecision highp float;\n\nuniform sampler2D u_particles_x;\nuniform sampler2D u_particles_y;\n\n// Which coordinate needs to be printed onto the texture\nuniform int u_out_coordinate;\n\nvarying vec2 v_tex_pos;\n`;\n    }\n  }\n\n  getMainBody() {\n  if (this.isDecode) {\n    return `\n   vec2 pos = vec2(\n     decodeFloatRGBA(texture2D(u_particles_x, v_tex_pos)),\n     decodeFloatRGBA(texture2D(u_particles_y, v_tex_pos))\n   );\n`\n    }\n    return `\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newPos.x);\n    else if (u_out_coordinate == 1) gl_FragColor = encodeFloatRGBA(newPos.y);\n    else if (u_out_coordinate == 6) gl_FragColor = encodeFloatRGBA(get_velocity(pos).x);\n    else if (u_out_coordinate == 7) gl_FragColor = encodeFloatRGBA(get_velocity(pos).y);\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/TexturePositionNode.js","import initScene from './scene';\nimport bus from './bus';\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initVectorFieldApp(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\nrequire.ensure('@/vueApp.js', () => {\n  // Settings UI is ready, initialize vue.js application\n  require('@/vueApp.js');\n});\n\nfunction initVectorFieldApp(canvas) {\n  canvas.width = window.innerWidth;\n  canvas.height =  window.innerHeight;\n  var ctxOptions = {antialiasing: false };\n\n  var gl = canvas.getContext('webgl', ctxOptions) ||\n          canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webgGLEnabled = true;\n    var scene = initScene(gl);\n    scene.start();\n    // TODO: too bad to plop stuff onto window?\n    window.scene = scene;\n  } else {\n    window.webgGLEnabled = false;\n  }\n}\n\nvar CCapture;\nvar currentCapturer;\n\nwindow.startRecord = startRecord;\nwindow.isRecording = false;\n\nfunction startRecord(url) {\n  if (!CCapture) {\n    require.ensure('ccapture.js', () => {\n      CCapture = require('ccapture.js');\n      window.stopRecord = stopRecord;\n      startRecord(url);\n    });\n\n    return;\n  }\n\n  if (currentCapturer) {\n    currentCapturer.stop();\n  }\n\n  if (!ffmpegScriptLoaded()) {\n    var ffmpegServer = document.createElement('script');\n    ffmpegServer.setAttribute('src', url || 'http://localhost:8080/ffmpegserver/ffmpegserver.js');\n    ffmpegServer.onload = () => startRecord(url);\n    document.head.appendChild(ffmpegServer);\n    return;\n  }\n\n  currentCapturer = new CCapture( {\n      format: 'ffmpegserver',\n      framerate: 60,\n      verbose: true,\n      name: \"fieldplay\",\n      extension: \".mp4\",\n      codec: \"mpeg4\",\n      ffmpegArguments: [\n        \"-b:v\", \"12M\",\n      ],\n  });\n\n  window.isRecording = true;\n  currentCapturer.start();\n  bus.fire('start-record', currentCapturer)\n}\n\nfunction ffmpegScriptLoaded() {\n  return typeof FFMpegServer !== 'undefined'\n}\n\nfunction stopRecord() {\n  window.isRecording = false;\n  bus.fire('stop-record', currentCapturer)\n  currentCapturer.stop();\n  currentCapturer.save();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/nativeMain.js","const code = `\nvec4 encodeFloatRGBA(highp float val) {\n    if (val == 0.0) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n    }\n\n    float mag = abs(val);\n    float exponent = floor(log2(mag));\n    // Correct log2 approximation errors.\n    exponent += float(exp2(exponent) <= mag / 2.0);\n    exponent -= float(exp2(exponent) > mag);\n\n    float mantissa;\n    if (exponent > 100.0) {\n        // Not sure why this needs to be done in two steps for the largest float to work.\n        // Best guess is the optimizer rewriting '/ exp2(e)' into '* exp2(-e)',\n        // but exp2(-128.0) is too small to represent.\n        mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n    } else {\n        mantissa = mag / float(exp2(exponent)) - 1.0;\n    }\n\n    float a = exponent + 127.0;\n    mantissa *= 256.0;\n    float b = floor(mantissa);\n    mantissa -= b;\n    mantissa *= 256.0;\n    float c = floor(mantissa);\n    mantissa -= c;\n    mantissa *= 128.0;\n    float d = floor(mantissa) * 2.0 + float(val < 0.0);\n    return vec4(a, b, c, d) / 255.0;\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/encodeFloatRGBA.js","import decodeFloatRGBA from './parts/decodeFloatRGBA';\nimport ColorModes from '../programs/colorModes';\nimport UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\n\n// TODO: this duplicates code from texture position.\nexport default class DrawParticleGraph {\n  constructor(colorMode) {\n    this.colorMode = colorMode;\n    this.isUniformColor = (colorMode === ColorModes.UNIFORM);\n  }\n\n  getFragmentShader() {\n    let variables = [];\n    var mainBody = [];\n\n    if (this.isUniformColor) {\n      // uniform color comes via uniform setting\n      variables.push('uniform vec4 u_particle_color;');\n      mainBody.push('gl_FragColor = u_particle_color;');\n    } else {\n      // Otherwise it comes from a vertex shader\n      variables.push('varying vec4 v_particle_color;');\n      mainBody.push('gl_FragColor = v_particle_color;');\n    }\n    return `precision highp float;\n${variables.join('\\n')}\n\nvoid main() {\n${mainBody.join('\\n')}\n}`\n  }\n\n  getVertexShader(vfCode) {\n    let decodePositions = textureBasedPosition();\n    let colorParts = this.isUniformColor ? uniformColor() : textureBasedColor(this.colorMode, vfCode);\n    let methods = []\n    addMethods(decodePositions, methods);\n    addMethods(colorParts, methods);\n    let main = [];\n    addMain(decodePositions, main);\n    addMain(colorParts, main);\n\n    return `precision highp float;\nattribute float a_index;\nuniform float u_particles_res;\nuniform vec2 u_min;\nuniform vec2 u_max;\n\n${decodePositions.getVariables() || ''}\n${colorParts.getVariables() || ''}\n\n${decodeFloatRGBA}\n\n${methods.join('\\n')}\n\nvoid main() {\n  vec2 txPos = vec2(\n        fract(a_index / u_particles_res),\n        floor(a_index / u_particles_res) / u_particles_res);\n  gl_PointSize = 1.0;\n\n${main.join('\\n')}\n\n  vec2 du = (u_max - u_min);\n  v_particle_pos = (v_particle_pos - u_min)/du;\n  gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\n}`\n  }\n}\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction textureBasedColor(colorMode, vfCode) {\n  var udf = new UserDefinedVelocityFunction(vfCode);\n  var integrate = new RungeKuttaIntegrator();\n\n  return {\n    getVariables,\n    getMain,\n    getMethods\n  }\n\n  function getVariables() {\n    let defines = '';\n\n    return `\nuniform sampler2D u_colors;\nuniform vec2 u_velocity_range;\n${defines}\nvarying vec4 v_particle_color;\n${udf.getDefines()}\n${integrate.getDefines()}\n`\n  }\n\n  function getMethods() {\n    return `\n// https://github.com/hughsk/glsl-hsv2rgb\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n${udf.getFunctions()}\n${integrate.getFunctions()}\n`\n  }\n\n  function getMain() {\n    // TODO: This needs to be refactored. I don't like code duplication.\n    let decode = colorMode === ColorModes.VELOCITY ?\n      `\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\n  v_particle_color = vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\n` : `\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\n  v_particle_color = vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\n`;\n\n    return `\nvec2 velocity = rk4(v_particle_pos);\n${decode}\n`\n  }\n}\n\nfunction uniformColor() {\n  return {\n    getVariables() {},\n    getMain() {}\n  }\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables,\n    getMain\n  }\n\n  function getVariables() {\n    return `\nuniform sampler2D u_particles_x;\nuniform sampler2D u_particles_y;\n    `\n  }\n\n  function getMain() {\n    return `\n  vec2 v_particle_pos = vec2(\n    decodeFloatRGBA(texture2D(u_particles_x, txPos)),\n    decodeFloatRGBA(texture2D(u_particles_y, txPos))\n  );\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/DrawParticleGraph.js","var eventify = require('ngraph.events');\n\nmodule.exports = eventify({});\n\n\n// WEBPACK FOOTER //\n// ./src/lib/bus.js","import util from '../gl-utils';\nimport bus from '../bus';\nimport {decodeFloatRGBA} from '../utils/floatPacking';\nimport config from '../config';\nimport makeStatCounter from '../utils/makeStatCounter';\n\nconst OUT_V_X = 6;\nconst OUT_V_Y = 7;\n/**\n * This program allows to change color of each particle. It works by\n * reading current velocities into a texture from the framebuffer. Once\n * velocities are read, it checks velocity scale and passes it to a draw program.\n */\nexport default function colorProgram(ctx) {\n  var speedNeedsUpdate = true;\n  var {gl} = ctx;\n  var velocity_y_texture, velocity_x_texture;\n  var particleStateResolution;\n  var pendingSpeedUpdate;\n  var numParticles;\n  var velocityCounter = makeStatCounter();\n  var velocity_x;\n  var velocity_y;\n\n  listenToEvents();\n\n  return {\n    updateCode,\n    updateParticlesPositions,\n    onParticleInit,\n    setColorMinMax,\n    requestSpeedUpdate,\n    dispose\n  };\n\n  function listenToEvents() {\n    bus.on('integration-timestep-changed', requestSpeedUpdate);\n    bus.on('bbox-change', requestSpeedUpdate);\n  }\n\n  function dispose() {\n    bus.off('integration-timestep-changed', requestSpeedUpdate);\n    bus.off('bbox-change', requestSpeedUpdate);\n    disposeTextures();\n  }\n\n  function disposeTextures() {\n    if (velocity_x_texture) gl.deleteTexture(velocity_x_texture);\n    if (velocity_y_texture) gl.deleteTexture(velocity_y_texture);\n  }\n\n  function requestSpeedUpdate() {\n    if (pendingSpeedUpdate) clearTimeout(pendingSpeedUpdate);\n    pendingSpeedUpdate = setTimeout(() => {\n      speedNeedsUpdate = true;\n      pendingSpeedUpdate = 0;\n    }, 50);\n  }\n\n  function setColorMinMax(program) {\n    gl.uniform2f(program.u_velocity_range, velocityCounter.getMin(), velocityCounter.getMax());\n  }\n\n  function onParticleInit() {\n    disposeTextures();\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n\n    velocity_x = new Uint8Array(numParticles * 4);\n    velocity_y = new Uint8Array(numParticles * 4);\n    velocity_x_texture = util.createTexture(gl, gl.NEAREST, velocity_x, particleStateResolution, particleStateResolution);\n    velocity_y_texture = util.createTexture(gl, gl.NEAREST, velocity_y, particleStateResolution, particleStateResolution);\n\n    requestSpeedUpdate();\n  }\n\n  function updateCode() {\n    requestSpeedUpdate();\n  }\n\n  function updateParticlesPositions(program) {\n    if (!speedNeedsUpdate || !velocity_x || !velocity_y) return;\n    speedNeedsUpdate = false;\n\n    // We assume this is called from update position program\n    util.bindFramebuffer(gl, ctx.framebuffer, velocity_x_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_X);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    util.bindFramebuffer(gl, ctx.framebuffer, velocity_y_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_Y);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    updateMinMax();\n  }\n\n  function updateMinMax() {\n    velocityCounter.reset();\n    // TODO: Do I want this to be async?\n    for(var i = 0; i < velocity_y.length; i+=4) {\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      var v = Math.sqrt(vx * vx + vy * vy);\n      velocityCounter.add(v);\n    }\n  }\n}\n\nfunction readFloat(buffer, offset) {\n    return decodeFloatRGBA(\n      buffer[offset + 0],\n      buffer[offset + 1],\n      buffer[offset + 2],\n      buffer[offset + 3]\n    );\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/colorProgram.js","/**\n * Renders computed state onto the screen.\n */\nimport glUtils from '../gl-utils';\n\nconst NO_TRANSFORM = {dx: 0, dy: 0, scale: 1};\n\nexport default function makeScreenProgram(ctx) {\n  var {gl, canvasRect} = ctx;\n\n  var screenTexture, backgroundTexture;\n  var boundBoxTextureTransform = {dx: 0, dy: 0, scale: 1};\n  var lastRenderedBoundingBox = null;\n\n  // TODO: Allow customization? Last time I tried, I didn't like it too much.\n  // It was very easy to screw up the design, and the tool looked ugly :-/\n  let backgroundColor = { r: 19/255, g: 41/255, b: 79/255, a: 1 };\n\n  updateScreenTextures();\n  var screenProgram = glUtils.createProgram(gl, getScreenVertexShader(), getScreenFragmentShader());\n  \n  var api = {\n    fadeOutLastFrame,\n    renderCurrentScreen,\n    updateScreenTextures,\n\n    boundingBoxUpdated: false\n  };\n\n  return api;\n  \n  function fadeOutLastFrame() {\n    // render to the frame buffer\n    glUtils.bindFramebuffer(gl, ctx.framebuffer, screenTexture);\n    gl.viewport(0, 0, canvasRect.width, canvasRect.height);\n\n    if (api.boundingBoxUpdated && lastRenderedBoundingBox) {\n      // We move the back texture, relative to the bounding box change. This eliminates\n      // particle train artifacts, though, not all of them: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n      // If you know how to improve this - please let me know.\n      boundBoxTextureTransform.dx = -(ctx.bbox.minX - lastRenderedBoundingBox.minX)/(ctx.bbox.maxX - ctx.bbox.minX);\n      boundBoxTextureTransform.dy = -(ctx.bbox.minY - lastRenderedBoundingBox.minY)/(ctx.bbox.maxY - ctx.bbox.minY);\n      boundBoxTextureTransform.scale = (ctx.bbox.maxX - ctx.bbox.minX) / (lastRenderedBoundingBox.maxX - lastRenderedBoundingBox.minX);\n      drawTexture(backgroundTexture, ctx.fadeOpacity, boundBoxTextureTransform);\n    } else {\n      drawTexture(backgroundTexture, ctx.fadeOpacity, NO_TRANSFORM)\n    }\n  }\n\n  function renderCurrentScreen() {\n    glUtils.bindFramebuffer(gl, null);\n\n    saveLastBbox();\n\n    gl.enable(gl.BLEND); \n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    drawTexture(screenTexture, 1.0, NO_TRANSFORM);\n    gl.disable(gl.BLEND);\n\n    var temp = backgroundTexture;\n    backgroundTexture = screenTexture;\n    screenTexture = temp;\n\n    api.boundingBoxUpdated = false;\n    if (window.audioTexture) {\n      drawTexture(window.audioTexture, 1.0, NO_TRANSFORM);\n    }\n  }\n\n  function updateScreenTextures() {\n    var {width, height} = canvasRect;\n    var emptyPixels = new Uint8Array(width * height * 4);\n    if (screenTexture) {\n      gl.deleteTexture(screenTexture);\n    }\n    if (backgroundTexture) {\n      gl.deleteTexture(backgroundTexture);\n    }\n\n    screenTexture = glUtils.createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n    backgroundTexture = glUtils.createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n  }\n\n  function saveLastBbox() {\n    if (!lastRenderedBoundingBox) {\n      lastRenderedBoundingBox = {\n        minX: ctx.bbox.minX,\n        minY: ctx.bbox.minY,\n        maxX: ctx.bbox.maxX,\n        maxY: ctx.bbox.maxY\n      }\n\n      return;\n    } \n\n    lastRenderedBoundingBox.minX = ctx.bbox.minX;\n    lastRenderedBoundingBox.minY = ctx.bbox.minY;\n    lastRenderedBoundingBox.maxX = ctx.bbox.maxX;\n    lastRenderedBoundingBox.maxY = ctx.bbox.maxY;\n  }\n\n  function drawTexture(texture, opacity, textureTransform) {\n    var program = screenProgram;\n    gl.useProgram(program.program);\n    glUtils.bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    // TODO: This index is very fragile. I need to find a way\n    glUtils.bindTexture(gl, texture, ctx.screenTextureUnit);\n    gl.uniform1i(program.u_screen, ctx.screenTextureUnit);\n\n    gl.uniform1f(program.u_opacity_border, 0.02);\n    gl.uniform1f(program.u_opacity, opacity);\n    gl.uniform3f(program.u_transform, textureTransform.dx, textureTransform.dy, textureTransform.scale);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n\nfunction getScreenVertexShader() {\n  return `// screen program\nprecision highp float;\n\nattribute vec2 a_pos;\nvarying vec2 v_tex_pos;\nuniform vec3 u_transform;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    vec2 pos = a_pos;\n\n    // This transformation tries to move texture (raster) to the approximate position\n    // of particles on the current frame. This is needed to avoid rendering artifacts\n    // during pan/zoom: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n\n    // PS: I must admit, I wrote this formula through sweat and tears, and\n    // I still have no idea why I don't need to apply (pos.y - 0.5) to Y coordinate.\n    // Is it because I use aspect ratio for bounding box?\n    pos.x = (pos.x - 0.5) / u_transform.z - u_transform.x + 0.5 * u_transform.z;\n    pos.y = pos.y / u_transform.z + u_transform.y;\n\n    pos = 1.0 - 2.0 * pos;\n    gl_Position = vec4(pos, 0, 1);\n}`\n}\n\nfunction getScreenFragmentShader() {\n  return `precision highp float;\nuniform sampler2D u_screen;\nuniform float u_opacity;\nuniform float u_opacity_border;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n  vec2 p = 1.0 - v_tex_pos;\n  vec4 color = texture2D(u_screen, p);\n\n  // For some reason particles near border leave trace when we translate the texture\n  // This is my dirty hack to fix it: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n  if (p.x < u_opacity_border || p.x > 1. - u_opacity_border || p.y < u_opacity_border || p.y > 1. - u_opacity_border) {\n    gl_FragColor = vec4(0.);\n  } else {\n    // opacity fade out even with a value close to 0.0\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\n  }\n}`\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/screenProgram.js","import BaseShaderNode from './BaseShaderNode';\n\nexport default class RungeKuttaIntegrator extends BaseShaderNode {\n  constructor () {\n    super();\n  }\n\n  getDefines() {\n    return `\nuniform float u_h;\n`\n  }\n\n  getFunctions() {\n    return `\nvec2 rk4(const vec2 point) {\n  vec2 k1 = get_velocity( point );\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\n  vec2 k4 = get_velocity( point + k3 * u_h);\n\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\n}`\n  }\n\n  getMainBody() {\n    return `\n  vec2 velocity = rk4(pos);\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/RungeKuttaIntegrator.js","/**\n * Enables panning and zooming of canvas with vector field\n * \n * @param {HTMLCanvasElement} canvas that needs to be panned and zoomed\n * @param {*} updateBoundingBoxCallback callback that is called when vector field bounding box\n * needs to be updated\n */\nexport default function wglPanZoom(canvas, updateBoundingBoxCallback) {\n  var lastDx = 0;\n  var lastDy = 0;\n  var lastScale = 1;\n\n  // We need to be moved at least this many pixels in order to let\n  // transform update bounding box.\n  var transformThreshold = 2.1;\n\n  return {\n    applyTransform(newTransform) {\n      var dx = newTransform.x;\n      var dy = newTransform.y; \n\n      let dScale = (lastScale - newTransform.scale);\n      if (dScale === 0 && \n          Math.abs(dx - lastDx) < transformThreshold &&\n          Math.abs(dy - lastDy) < transformThreshold) {\n          // Wait for larger transform\n          return; \n      }\n\n      lastDx = dx;\n      lastDy = dy;\n      lastScale = newTransform.scale;\n\n      updateBoundingBoxCallback(newTransform)\n    },\n\n    getOwner() {\n      return canvas\n    }\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/wglPanZoom.js","import util from '../gl-utils';\nimport DrawParticleGraph from '../shaderGraph/DrawParticleGraph';\nimport makeUpdatePositionProgram from './updatePositionProgram';\nimport { encodeFloatRGBA } from '../utils/floatPacking.js';\nimport config from '../config';\nimport createAudioProgram from './audioProgram';\n\nexport default function drawParticlesProgram(ctx) {\n  var gl = ctx.gl;\n\n  var particleStateResolution, particleIndexBuffer;\n  var numParticles;\n\n  var currentVectorField = '';\n  var updatePositionProgram = makeUpdatePositionProgram(ctx);\n  var audioProgram;\n\n  var drawProgram;\n  initPrograms();\n\n  return {\n    onParticleInit,\n    updateParticlesPositions,\n    drawParticles,\n    updateCode,\n    updateColorMode\n  }\n\n  function initPrograms() {\n    // need to update the draw graph because color mode shader has changed.\n    initDrawProgram();\n\n    if (config.isAudioEnabled) {\n      if (audioProgram) audioProgram.dispose();\n      audioProgram = createAudioProgram(ctx);\n    }\n  }\n\n  function initDrawProgram() {\n    if (drawProgram) drawProgram.unload();\n\n    const drawGraph = new DrawParticleGraph(ctx.colorMode);\n    drawProgram = util.createProgram(gl, drawGraph.getVertexShader(currentVectorField), drawGraph.getFragmentShader());\n  }\n\n  function updateParticlesPositions() {\n    ctx.frame += 1\n    ctx.frameSeed = Math.random();\n\n    if (audioProgram) audioProgram.updateTextures();\n\n    updatePositionProgram.updateParticlesPositions();\n  }\n\n\n  function updateColorMode() {\n    initDrawProgram();\n  }\n\n  function updateCode(vfCode) {\n    ctx.frame = 0;\n    currentVectorField = vfCode;\n    updatePositionProgram.updateCode(vfCode);\n\n    initDrawProgram();\n  }\n\n\n  function onParticleInit() {\n    if (!currentVectorField) return;\n\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n    var particleIndices = new Float32Array(numParticles);\n    var particleStateX = new Uint8Array(numParticles * 4);\n    var particleStateY = new Uint8Array(numParticles * 4);\n\n    var minX = ctx.bbox.minX; var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n    for (var i = 0; i < numParticles; i++) {\n      encodeFloatRGBA((Math.random()) * width + minX, particleStateX, i * 4); // randomize the initial particle positions\n      encodeFloatRGBA((Math.random()) * height + minY, particleStateY, i * 4); // randomize the initial particle positions\n\n      particleIndices[i] = i;\n    }\n\n    if (particleIndexBuffer) gl.deleteBuffer(particleIndexBuffer);\n    particleIndexBuffer = util.createBuffer(gl, particleIndices);\n\n    updatePositionProgram.onParticleInit(particleStateX, particleStateY);\n  }\n\n  function drawParticles() {\n    var program = drawProgram;\n    gl.useProgram(program.program);\n  \n    util.bindAttribute(gl, particleIndexBuffer, program.a_index, 1);\n    \n    updatePositionProgram.prepareToDraw(program);\n  \n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    gl.uniform1f(program.u_particles_res, particleStateResolution);\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n  \n    gl.drawArrays(gl.POINTS, 0, numParticles); \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/drawParticlesProgram.js","/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\nimport glUtil from '../gl-utils';\n\nexport default function textureCollection(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map((d, index) => {\n    var textureInfo = {\n      texture: glUtil.createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    }\n\n    return textureInfo;\n  })\n\n  return {\n    dispose,\n    bindTextures,\n    assignProgramUniforms,\n    length: dimensions.length,\n    textures,\n    get(i) { return textures[i]; }\n  }\n\n  function assignProgramUniforms(program) {\n    textures.forEach(tInfo => {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(tInfo => gl.deleteTexture(tInfo.texture));\n  }\n\n  function bindTextures(gl, program) {\n    textures.forEach((tInfo) => {\n      glUtil.bindTexture(gl, tInfo.texture, tInfo.index);\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/textureCollection.js","export default {\n  // I need to flash our more details before making any promises.\n  isAudioEnabled: false,\n  vectorLinesEnabled: false\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/config.js","import BaseShaderNode from './BaseShaderNode';\n\nexport default class PanzoomTransform extends BaseShaderNode {\n  constructor(config) {\n    super();\n    // decode is used when we move particle read from the texture\n    // otherwise we write particle to texture and need to reverse transform\n    this.decode = config && config.decode;\n    this.srcPosName = (config && config.posName) || 'pos';\n  }\n\n  getDefines() {\n    if (this.decode) {\n      // TODO: Need to figure out how to not duplicate this.\n    return `\n  uniform vec2 u_min;\n  uniform vec2 u_max;\n`;\n    }\n  }\n\n  getMainBody() {\n    if (this.decode) {\n      return `\n  // move particle position according to current transform\n  vec2 du = (u_max - u_min);\n  pos.x = ${this.srcPosName}.x * du.x + u_min.x;\n  pos.y = ${this.srcPosName}.y * du.y + u_min.y;\n`\n    }\n    return `\n  pos.x = (${this.srcPosName}.x - u_min.x)/du.x;\n  pos.y = (${this.srcPosName}.y - u_min.y)/du.y;\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/PanzoomTransform.js"],"sourceRoot":""}